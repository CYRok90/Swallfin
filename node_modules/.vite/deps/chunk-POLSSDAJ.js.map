{
  "version": 3,
  "sources": ["../../ssf/ssf.js", "../../@evidence-dev/component-utilities/src/formatting.js", "../../@evidence-dev/component-utilities/src/autoFormatting.js", "../../@evidence-dev/component-utilities/src/builtInFormats.js", "../../@tidyjs/tidy/src/tidy.ts", "../../@tidyjs/tidy/src/helpers/singleOrArray.ts", "../../d3-array/src/ascending.js", "../../d3-array/src/bisector.js", "../../d3-array/src/number.js", "../../d3-array/src/bisect.js", "../../d3-array/src/fsum.js", "../../internmap/src/index.js", "../../d3-array/src/identity.js", "../../d3-array/src/group.js", "../../d3-array/src/array.js", "../../d3-array/src/ticks.js", "../../d3-array/src/max.js", "../../d3-array/src/min.js", "../../d3-array/src/quickselect.js", "../../d3-array/src/quantile.js", "../../d3-array/src/median.js", "../../d3-array/src/shuffle.js", "../../@tidyjs/tidy/src/summarize.ts", "../../@tidyjs/tidy/src/mutate.ts", "../../@tidyjs/tidy/src/helpers/assignGroupKeys.ts", "../../@tidyjs/tidy/src/helpers/groupTraversal.ts", "../../@tidyjs/tidy/src/helpers/groupMap.ts", "../../@tidyjs/tidy/src/helpers/identity.ts", "../../@tidyjs/tidy/src/helpers/isObject.ts", "../../@tidyjs/tidy/src/groupBy.ts", "../../@tidyjs/tidy/src/summary/n.ts", "../../@tidyjs/tidy/src/summary/sum.ts", "../../@tidyjs/tidy/src/rename.ts", "../../@tidyjs/tidy/src/innerJoin.ts", "../../@tidyjs/tidy/src/leftJoin.ts", "../../@tidyjs/tidy/src/mutateWithSummary.ts", "../../@tidyjs/tidy/src/expand.ts", "../../@tidyjs/tidy/src/replaceNully.ts", "../../@tidyjs/tidy/src/complete.ts", "../../@tidyjs/tidy/src/math/math.ts", "../../@tidyjs/tidy/src/item/rate.ts", "../../@tidyjs/tidy/src/helpers/summation.ts", "../../@tidyjs/tidy/src/summary/min.ts", "../../@tidyjs/tidy/src/summary/max.ts", "../../@tidyjs/tidy/src/summary/mean.ts", "../../@tidyjs/tidy/src/summary/median.ts", "../../@tidyjs/tidy/src/summary/nDistinct.ts", "../../@evidence-dev/component-utilities/src/dateParsing.js", "../../@evidence-dev/component-utilities/src/inferColumnTypes.js"],
  "sourcesContent": ["/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint -W041 */\nvar SSF = ({});\nvar make_ssf = function make_ssf(SSF){\nSSF.version = '0.11.2';\nfunction _strrev(x) { var o = \"\", i = x.length-1; while(i>=0) o += x.charAt(i--); return o; }\nfunction fill(c,l) { var o = \"\"; while(o.length < l) o+=c; return o; }\nfunction pad0(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad_(v,d){var t=\"\"+v;return t.length>=d?t:fill(' ',d-t.length)+t;}\nfunction rpad_(v,d){var t=\"\"+v; return t.length>=d?t:t+fill(' ',d-t.length);}\nfunction pad0r1(v,d){var t=\"\"+Math.round(v); return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad0r2(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nvar p2_32 = Math.pow(2,32);\nfunction pad0r(v,d){if(v>p2_32||v<-p2_32) return pad0r1(v,d); var i = Math.round(v); return pad0r2(i,d); }\nfunction isgeneral(s, i) { i = i || 0; return s.length >= 7 + i && (s.charCodeAt(i)|32) === 103 && (s.charCodeAt(i+1)|32) === 101 && (s.charCodeAt(i+2)|32) === 110 && (s.charCodeAt(i+3)|32) === 101 && (s.charCodeAt(i+4)|32) === 114 && (s.charCodeAt(i+5)|32) === 97 && (s.charCodeAt(i+6)|32) === 108; }\nvar days = [\n\t['Sun', 'Sunday'],\n\t['Mon', 'Monday'],\n\t['Tue', 'Tuesday'],\n\t['Wed', 'Wednesday'],\n\t['Thu', 'Thursday'],\n\t['Fri', 'Friday'],\n\t['Sat', 'Saturday']\n];\nvar months = [\n\t['J', 'Jan', 'January'],\n\t['F', 'Feb', 'February'],\n\t['M', 'Mar', 'March'],\n\t['A', 'Apr', 'April'],\n\t['M', 'May', 'May'],\n\t['J', 'Jun', 'June'],\n\t['J', 'Jul', 'July'],\n\t['A', 'Aug', 'August'],\n\t['S', 'Sep', 'September'],\n\t['O', 'Oct', 'October'],\n\t['N', 'Nov', 'November'],\n\t['D', 'Dec', 'December']\n];\nfunction init_table(t) {\n\tt[0]=  'General';\n\tt[1]=  '0';\n\tt[2]=  '0.00';\n\tt[3]=  '#,##0';\n\tt[4]=  '#,##0.00';\n\tt[9]=  '0%';\n\tt[10]= '0.00%';\n\tt[11]= '0.00E+00';\n\tt[12]= '# ?/?';\n\tt[13]= '# ??/??';\n\tt[14]= 'm/d/yy';\n\tt[15]= 'd-mmm-yy';\n\tt[16]= 'd-mmm';\n\tt[17]= 'mmm-yy';\n\tt[18]= 'h:mm AM/PM';\n\tt[19]= 'h:mm:ss AM/PM';\n\tt[20]= 'h:mm';\n\tt[21]= 'h:mm:ss';\n\tt[22]= 'm/d/yy h:mm';\n\tt[37]= '#,##0 ;(#,##0)';\n\tt[38]= '#,##0 ;[Red](#,##0)';\n\tt[39]= '#,##0.00;(#,##0.00)';\n\tt[40]= '#,##0.00;[Red](#,##0.00)';\n\tt[45]= 'mm:ss';\n\tt[46]= '[h]:mm:ss';\n\tt[47]= 'mmss.0';\n\tt[48]= '##0.0E+0';\n\tt[49]= '@';\n\tt[56]= '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"';\n}\n\nvar table_fmt = {};\ninit_table(table_fmt);\n/* Defaults determined by systematically testing in Excel 2019 */\n\n/* These formats appear to default to other formats in the table */\nvar default_map = [];\nvar defi = 0;\n\n//  5 -> 37 ...  8 -> 40\nfor(defi = 5; defi <= 8; ++defi) default_map[defi] = 32 + defi;\n\n// 23 ->  0 ... 26 ->  0\nfor(defi = 23; defi <= 26; ++defi) default_map[defi] = 0;\n\n// 27 -> 14 ... 31 -> 14\nfor(defi = 27; defi <= 31; ++defi) default_map[defi] = 14;\n// 50 -> 14 ... 58 -> 14\nfor(defi = 50; defi <= 58; ++defi) default_map[defi] = 14;\n\n// 59 ->  1 ... 62 ->  4\nfor(defi = 59; defi <= 62; ++defi) default_map[defi] = defi - 58;\n// 67 ->  9 ... 68 -> 10\nfor(defi = 67; defi <= 68; ++defi) default_map[defi] = defi - 58;\n// 72 -> 14 ... 75 -> 17\nfor(defi = 72; defi <= 75; ++defi) default_map[defi] = defi - 58;\n\n// 69 -> 12 ... 71 -> 14\nfor(defi = 67; defi <= 68; ++defi) default_map[defi] = defi - 57;\n\n// 76 -> 20 ... 78 -> 22\nfor(defi = 76; defi <= 78; ++defi) default_map[defi] = defi - 56;\n\n// 79 -> 45 ... 81 -> 47\nfor(defi = 79; defi <= 81; ++defi) default_map[defi] = defi - 34;\n\n// 82 ->  0 ... 65536 -> 0 (omitted)\n\n/* These formats technically refer to Accounting formats with no equivalent */\nvar default_str = [];\n\n//  5 -- Currency,   0 decimal, black negative\ndefault_str[5] = default_str[63] = '\"$\"#,##0_);\\\\(\"$\"#,##0\\\\)';\n//  6 -- Currency,   0 decimal, red   negative\ndefault_str[6] = default_str[64] = '\"$\"#,##0_);[Red]\\\\(\"$\"#,##0\\\\)';\n//  7 -- Currency,   2 decimal, black negative\ndefault_str[7] = default_str[65] = '\"$\"#,##0.00_);\\\\(\"$\"#,##0.00\\\\)';\n//  8 -- Currency,   2 decimal, red   negative\ndefault_str[8] = default_str[66] = '\"$\"#,##0.00_);[Red]\\\\(\"$\"#,##0.00\\\\)';\n\n// 41 -- Accounting, 0 decimal, No Symbol\ndefault_str[41] = '_(* #,##0_);_(* \\\\(#,##0\\\\);_(* \"-\"_);_(@_)';\n// 42 -- Accounting, 0 decimal, $  Symbol\ndefault_str[42] = '_(\"$\"* #,##0_);_(\"$\"* \\\\(#,##0\\\\);_(\"$\"* \"-\"_);_(@_)';\n// 43 -- Accounting, 2 decimal, No Symbol\ndefault_str[43] = '_(* #,##0.00_);_(* \\\\(#,##0.00\\\\);_(* \"-\"??_);_(@_)';\n// 44 -- Accounting, 2 decimal, $  Symbol\ndefault_str[44] = '_(\"$\"* #,##0.00_);_(\"$\"* \\\\(#,##0.00\\\\);_(\"$\"* \"-\"??_);_(@_)';\nfunction frac(x, D, mixed) {\n\tvar sgn = x < 0 ? -1 : 1;\n\tvar B = x * sgn;\n\tvar P_2 = 0, P_1 = 1, P = 0;\n\tvar Q_2 = 1, Q_1 = 0, Q = 0;\n\tvar A = Math.floor(B);\n\twhile(Q_1 < D) {\n\t\tA = Math.floor(B);\n\t\tP = A * P_1 + P_2;\n\t\tQ = A * Q_1 + Q_2;\n\t\tif((B - A) < 0.00000005) break;\n\t\tB = 1 / (B - A);\n\t\tP_2 = P_1; P_1 = P;\n\t\tQ_2 = Q_1; Q_1 = Q;\n\t}\n\tif(Q > D) { if(Q_1 > D) { Q = Q_2; P = P_2; } else { Q = Q_1; P = P_1; } }\n\tif(!mixed) return [0, sgn * P, Q];\n\tvar q = Math.floor(sgn * P/Q);\n\treturn [q, sgn*P - q*Q, Q];\n}\nfunction parse_date_code(v,opts,b2) {\n\tif(v > 2958465 || v < 0) return null;\n\tvar date = (v|0), time = Math.floor(86400 * (v - date)), dow=0;\n\tvar dout=[];\n\tvar out={D:date, T:time, u:86400*(v-date)-time,y:0,m:0,d:0,H:0,M:0,S:0,q:0};\n\tif(Math.abs(out.u) < 1e-6) out.u = 0;\n\tif(opts && opts.date1904) date += 1462;\n\tif(out.u > 0.9999) {\n\t\tout.u = 0;\n\t\tif(++time == 86400) { out.T = time = 0; ++date; ++out.D; }\n\t}\n\tif(date === 60) {dout = b2 ? [1317,10,29] : [1900,2,29]; dow=3;}\n\telse if(date === 0) {dout = b2 ? [1317,8,29] : [1900,1,0]; dow=6;}\n\telse {\n\t\tif(date > 60) --date;\n\t\t/* 1 = Jan 1 1900 in Gregorian */\n\t\tvar d = new Date(1900, 0, 1);\n\t\td.setDate(d.getDate() + date - 1);\n\t\tdout = [d.getFullYear(), d.getMonth()+1,d.getDate()];\n\t\tdow = d.getDay();\n\t\tif(date < 60) dow = (dow + 6) % 7;\n\t\tif(b2) dow = fix_hijri(d, dout);\n\t}\n\tout.y = dout[0]; out.m = dout[1]; out.d = dout[2];\n\tout.S = time % 60; time = Math.floor(time / 60);\n\tout.M = time % 60; time = Math.floor(time / 60);\n\tout.H = time;\n\tout.q = dow;\n\treturn out;\n}\nSSF.parse_date_code = parse_date_code;\nvar basedate = new Date(1899, 11, 31, 0, 0, 0);\nvar dnthresh = basedate.getTime();\nvar base1904 = new Date(1900, 2, 1, 0, 0, 0);\nfunction datenum_local(v, date1904) {\n\tvar epoch = v.getTime();\n\tif(date1904) epoch -= 1461*24*60*60*1000;\n\telse if(v >= base1904) epoch += 24*60*60*1000;\n\treturn (epoch - (dnthresh + (v.getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);\n}\n/* The longest 32-bit integer text is \"-4294967296\", exactly 11 chars */\nfunction general_fmt_int(v) { return v.toString(10); }\nSSF._general_int = general_fmt_int;\n\n/* ECMA-376 18.8.30 numFmt*/\n/* Note: `toPrecision` uses standard form when prec > E and E >= -6 */\nvar general_fmt_num = (function make_general_fmt_num() {\n\tvar trailing_zeroes_and_decimal = /(?:\\.0*|(\\.\\d*[1-9])0+)$/;\n\tfunction strip_decimal(o) {\n\t\treturn (o.indexOf(\".\") == -1) ? o : o.replace(trailing_zeroes_and_decimal, \"$1\");\n\t}\n\n\t/* General Exponential always shows 2 digits exp and trims the mantissa */\n\tvar mantissa_zeroes_and_decimal = /(?:\\.0*|(\\.\\d*[1-9])0+)[Ee]/;\n\tvar exp_with_single_digit = /(E[+-])(\\d)$/;\n\tfunction normalize_exp(o) {\n\t\tif(o.indexOf(\"E\") == -1) return o;\n\t\treturn o.replace(mantissa_zeroes_and_decimal,\"$1E\").replace(exp_with_single_digit,\"$10$2\");\n\t}\n\n\t/* exponent >= -9 and <= 9 */\n\tfunction small_exp(v) {\n\t\tvar w = (v<0?12:11);\n\t\tvar o = strip_decimal(v.toFixed(12)); if(o.length <= w) return o;\n\t\to = v.toPrecision(10); if(o.length <= w) return o;\n\t\treturn v.toExponential(5);\n\t}\n\n\t/* exponent >= 11 or <= -10 likely exponential */\n\tfunction large_exp(v) {\n\t\tvar o = strip_decimal(v.toFixed(11));\n\t\treturn (o.length > (v<0?12:11) || o === \"0\" || o === \"-0\") ? v.toPrecision(6) : o;\n\t}\n\n\tfunction general_fmt_num_base(v) {\n\t\tvar V = Math.floor(Math.log(Math.abs(v))*Math.LOG10E), o;\n\n\t\tif(V >= -4 && V <= -1) o = v.toPrecision(10+V);\n\t\telse if(Math.abs(V) <= 9) o = small_exp(v);\n\t\telse if(V === 10) o = v.toFixed(10).substr(0,12);\n\t\telse o = large_exp(v);\n\n\t\treturn strip_decimal(normalize_exp(o.toUpperCase()));\n\t}\n\n\treturn general_fmt_num_base;\n})();\nSSF._general_num = general_fmt_num;\n\n/*\n\t\"General\" rules:\n\t- text is passed through (\"@\")\n\t- booleans are rendered as TRUE/FALSE\n\t- \"up to 11 characters\" displayed for numbers\n\t- Default date format (code 14) used for Dates\n\n\tTODO: technically the display depends on the width of the cell\n*/\nfunction general_fmt(v, opts) {\n\tswitch(typeof v) {\n\t\tcase 'string': return v;\n\t\tcase 'boolean': return v ? \"TRUE\" : \"FALSE\";\n\t\tcase 'number': return (v|0) === v ? v.toString(10) : general_fmt_num(v);\n\t\tcase 'undefined': return \"\";\n\t\tcase 'object':\n\t\t\tif(v == null) return \"\";\n\t\t\tif(v instanceof Date) return format(14, datenum_local(v, opts && opts.date1904), opts);\n\t}\n\tthrow new Error(\"unsupported value in General format: \" + v);\n}\nSSF._general = general_fmt;\nfunction fix_hijri(date, o) {\n  /* TODO: properly adjust y/m/d and  */\n  o[0] -= 581;\n  var dow = date.getDay();\n  if(date < 60) dow = (dow + 6) % 7;\n  return dow;\n}\nvar THAI_DIGITS = \"\\u0E50\\u0E51\\u0E52\\u0E53\\u0E54\\u0E55\\u0E56\\u0E57\\u0E58\\u0E59\".split(\"\");\n/*jshint -W086 */\nfunction write_date(type, fmt, val, ss0) {\n\tvar o=\"\", ss=0, tt=0, y = val.y, out, outl = 0;\n\tswitch(type) {\n\t\tcase 98: /* 'b' buddhist year */\n\t\t\ty = val.y + 543;\n\t\t\t/* falls through */\n\t\tcase 121: /* 'y' year */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = y % 100; outl = 2; break;\n\t\t\tdefault: out = y % 10000; outl = 4; break;\n\t\t} break;\n\t\tcase 109: /* 'm' month */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.m; outl = fmt.length; break;\n\t\t\tcase 3: return months[val.m-1][1];\n\t\t\tcase 5: return months[val.m-1][0];\n\t\t\tdefault: return months[val.m-1][2];\n\t\t} break;\n\t\tcase 100: /* 'd' day */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.d; outl = fmt.length; break;\n\t\t\tcase 3: return days[val.q][0];\n\t\t\tdefault: return days[val.q][1];\n\t\t} break;\n\t\tcase 104: /* 'h' 12-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = 1+(val.H+11)%12; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 72: /* 'H' 24-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.H; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 77: /* 'M' minutes */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.M; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad minute format: ' + fmt;\n\t\t} break;\n\t\tcase 115: /* 's' seconds */\n\t\t\tif(fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;\n\t\t\tif(val.u === 0 && (fmt == \"s\" || fmt == \"ss\")) return pad0(val.S, fmt.length);\nif(ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;\n\t\t\telse tt = ss0 === 1 ? 10 : 1;\n\t\t\tss = Math.round((tt)*(val.S + val.u));\n\t\t\tif(ss >= 60*tt) ss = 0;\n\t\t\tif(fmt === 's') return ss === 0 ? \"0\" : \"\"+ss/tt;\n\t\t\to = pad0(ss,2 + ss0);\n\t\t\tif(fmt === 'ss') return o.substr(0,2);\n\t\t\treturn \".\" + o.substr(2,fmt.length-1);\n\t\tcase 90: /* 'Z' absolute time */\n\t\tswitch(fmt) {\n\t\t\tcase '[h]': case '[hh]': out = val.D*24+val.H; break;\n\t\t\tcase '[m]': case '[mm]': out = (val.D*24+val.H)*60+val.M; break;\n\t\t\tcase '[s]': case '[ss]': out = ((val.D*24+val.H)*60+val.M)*60+Math.round(val.S+val.u); break;\n\t\t\tdefault: throw 'bad abstime format: ' + fmt;\n\t\t} outl = fmt.length === 3 ? 1 : 2; break;\n\t\tcase 101: /* 'e' era */\n\t\t\tout = y; outl = 1; break;\n\t}\n\tvar outstr = outl > 0 ? pad0(out, outl) : \"\";\n\treturn outstr;\n}\n/*jshint +W086 */\nfunction commaify(s) {\n\tvar w = 3;\n\tif(s.length <= w) return s;\n\tvar j = (s.length % w), o = s.substr(0,j);\n\tfor(; j!=s.length; j+=w) o+=(o.length > 0 ? \",\" : \"\") + s.substr(j,w);\n\treturn o;\n}\nvar write_num = (function make_write_num(){\nvar pct1 = /%/g;\nfunction write_num_pct(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_cm(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_exp(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(o.indexOf(\"e\") === -1) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\twhile(o.substr(0,2) === \"0.\") {\n\t\t\t\to = o.charAt(0) + o.substr(2,period) + \".\" + o.substr(2+period);\n\t\t\t\to = o.replace(/^0+([1-9])/,\"$1\").replace(/^0+\\./,\"0.\");\n\t\t\t}\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nvar frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\nfunction write_num_f1(r, aval, sign) {\n\tvar den = parseInt(r[4],10), rr = Math.round(aval * den), base = Math.floor(rr/den);\n\tvar myn = (rr - base*den), myd = den;\n\treturn sign + (base === 0 ? \"\" : \"\"+base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn,r[1].length) + r[2] + \"/\" + r[3] + pad0(myd,r[4].length));\n}\nfunction write_num_f2(r, aval, sign) {\n\treturn sign + (aval === 0 ? \"\" : \"\"+aval) + fill(\" \", r[1].length + 2 + r[4].length);\n}\nvar dec1 = /^#*0*\\.([0#]+)/;\nvar closeparen = /\\).*[0#]/;\nvar phone = /\\(###\\) ###\\\\?-####/;\nfunction hashq(str) {\n\tvar o = \"\", cc;\n\tfor(var i = 0; i != str.length; ++i) switch((cc=str.charCodeAt(i))) {\n\t\tcase 35: break;\n\t\tcase 63: o+= \" \"; break;\n\t\tcase 48: o+= \"0\"; break;\n\t\tdefault: o+= String.fromCharCode(cc);\n\t}\n\treturn o;\n}\nfunction rnd(val, d) { var dd = Math.pow(10,d); return \"\"+(Math.round(val * dd)/dd); }\nfunction dec(val, d) {\n\tvar _frac = val - Math.floor(val), dd = Math.pow(10,d);\n\tif (d < ('' + Math.round(_frac * dd)).length) return 0;\n\treturn Math.round(_frac * dd);\n}\nfunction carry(val, d) {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nfunction flr(val) {\n\tif(val < 2147483647 && val > -2147483648) return \"\"+(val >= 0 ? (val|0) : (val-1|0));\n\treturn \"\"+Math.floor(val);\n}\nfunction write_num_flt(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_flt('n', ffmt, val);\n\t\treturn '(' + write_num_flt('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_flt(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0r(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = pad0r(val,0); if(o === \"0\") o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f1(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0r(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\n\t\to = rnd(val, r[1].length).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1])).replace(/\\.(\\d*)$/,function($$, $1) { return \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify(pad0r(aval,0));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\"+(Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length),r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_flt(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_flt(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = pad0r(val, 0);\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0?]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\tri = dec(val, r[1].length);\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(ri,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,##0.00\": return write_num_flt(type, \"#,##0.00\", val);\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(pad0r(aval,0)); return x !== \"0\" ? sign + x : \"\";\n\t\tcase \"###,###.00\": return write_num_flt(type, \"###,##0.00\",val).replace(/^0\\./,\".\");\n\t\tcase \"#,###.00\": return write_num_flt(type, \"#,##0.00\",val).replace(/^0\\./,\".\");\n\t\tdefault:\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num_cm2(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_pct2(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_exp2(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp2(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(!o.match(/[Ee]/)) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nfunction write_num_int(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_int('n', ffmt, val);\n\t\treturn '(' + write_num_int('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_int(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = (\"\"+val); if(val === 0) o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f2(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\no = (\"\"+val).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1]));\n\t\to = o.replace(/\\.(\\d*)$/,function($$, $1) {\nreturn \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + (\"\"+aval).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify((\"\"+aval));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify((\"\"+val)) + \".\" + fill('0',r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_int(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_int(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = \"\" + val;\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\"+val).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(0,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(\"\"+aval); return x !== \"0\" ? sign + x : \"\";\n\t\tdefault:\n\t\t\tif(fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0,fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nreturn function write_num(type, fmt, val) {\n\treturn (val|0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n};})();\nfunction split_fmt(fmt) {\n\tvar out = [];\n\tvar in_str = false/*, cc*/;\n\tfor(var i = 0, j = 0; i < fmt.length; ++i) switch((/*cc=*/fmt.charCodeAt(i))) {\n\t\tcase 34: /* '\"' */\n\t\t\tin_str = !in_str; break;\n\t\tcase 95: case 42: case 92: /* '_' '*' '\\\\' */\n\t\t\t++i; break;\n\t\tcase 59: /* ';' */\n\t\t\tout[out.length] = fmt.substr(j,i-j);\n\t\t\tj = i+1;\n\t}\n\tout[out.length] = fmt.substr(j);\n\tif(in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\n\treturn out;\n}\nSSF._split = split_fmt;\nvar abstime = /\\[[HhMmSs\\u0E0A\\u0E19\\u0E17]*\\]/;\nfunction fmt_is_date(fmt) {\n\tvar i = 0, /*cc = 0,*/ c = \"\", o = \"\";\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': if(isgeneral(fmt, i)) i+= 6; i++; break;\n\t\t\tcase '\"': for(;(/*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;){/*empty*/} ++i; break;\n\t\t\tcase '\\\\': i+=2; break;\n\t\t\tcase '_': i+=2; break;\n\t\t\tcase '@': ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") return true;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g': return true;\n\t\t\tcase 'A': case 'a': case '上':\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"上午/下午\") return true;\n\t\t\t\t++i; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.match(abstime)) return true;\n\t\t\t\tbreak;\n\t\t\tcase '.':\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\twhile(i < fmt.length && (\"0#?.,E+-%\".indexOf(c=fmt.charAt(++i)) > -1 || (c=='\\\\' && fmt.charAt(i+1) == \"-\" && \"0#\".indexOf(fmt.charAt(i+2))>-1))){/* empty */}\n\t\t\t\tbreak;\n\t\t\tcase '?': while(fmt.charAt(++i) === c){/* empty */} break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break;\n\t\t\tcase '(': case ')': ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\twhile(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1){/* empty */} break;\n\t\t\tcase ' ': ++i; break;\n\t\t\tdefault: ++i; break;\n\t\t}\n\t}\n\treturn false;\n}\nSSF.is_date = fmt_is_date;\nfunction eval_fmt(fmt, v, opts, flen) {\n\tvar out = [], o = \"\", i = 0, c = \"\", lst='t', dt, j, cc;\n\tvar hr='H';\n\t/* Tokenize */\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': /* General */\n\t\t\t\tif(!isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' +fmt);\n\t\t\t\tout[out.length] = {t:'G', v:'General'}; i+=7; break;\n\t\t\tcase '\"': /* Literal text */\n\t\t\t\tfor(o=\"\";(cc=fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\n\t\t\t\tout[out.length] = {t:'t', v:o}; ++i; break;\n\t\t\tcase '\\\\': var w = fmt.charAt(++i), t = (w === \"(\" || w === \")\") ? w : 't';\n\t\t\t\tout[out.length] = {t:t, v:w}; ++i; break;\n\t\t\tcase '_': out[out.length] = {t:'t', v:\" \"}; i+=2; break;\n\t\t\tcase '@': /* Text Placeholder */\n\t\t\t\tout[out.length] = {t:'T', v:v}; ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts, fmt.charAt(i+1) === \"2\"); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'X', v:fmt.substr(i,2)}; lst = c; i+=2; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\tc = c.toLowerCase();\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g':\n\t\t\t\tif(v < 0) return \"\";\n\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\to = c; while(++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o+=c;\n\t\t\t\tif(c === 'm' && lst.toLowerCase() === 'h') c = 'M';\n\t\t\t\tif(c === 'h') c = hr;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase 'A': case 'a': case '上':\n\t\t\t\tvar q={t:c, v:c};\n\t\t\t\tif(dt==null) dt=parse_date_code(v, opts);\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") { if(dt!=null) q.v = dt.H >= 12 ? \"P\" : \"A\"; q.t = 'T'; hr='h';i+=3;}\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"AM/PM\") { if(dt!=null) q.v = dt.H >= 12 ? \"PM\" : \"AM\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"上午/下午\") { if(dt!=null) q.v = dt.H >= 12 ? \"下午\" : \"上午\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse { q.t = \"t\"; ++i; }\n\t\t\t\tif(dt==null && q.t === 'T') return \"\";\n\t\t\t\tout[out.length] = q; lst = c; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\n\t\t\t\tif(o.match(abstime)) {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'Z', v:o.toLowerCase()};\n\t\t\t\t\tlst = o.charAt(1);\n\t\t\t\t} else if(o.indexOf(\"$\") > -1) {\n\t\t\t\t\to = (o.match(/\\$([^-\\[\\]]*)/)||[])[1]||\"$\";\n\t\t\t\t\tif(!fmt_is_date(fmt)) out[out.length] = {t:'t',v:o};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t/* Numbers */\n\t\t\tcase '.':\n\t\t\t\tif(dt != null) {\n\t\t\t\t\to = c; while(++i < fmt.length && (c=fmt.charAt(i)) === \"0\") o += c;\n\t\t\t\t\tout[out.length] = {t:'s', v:o}; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\to = c; while(++i < fmt.length && \"0#?.,E+-%\".indexOf(c=fmt.charAt(i)) > -1) o += c;\n\t\t\t\tout[out.length] = {t:'n', v:o}; break;\n\t\t\tcase '?':\n\t\t\t\to = c; while(fmt.charAt(++i) === c) o+=c;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break; // **\n\t\t\tcase '(': case ')': out[out.length] = {t:(flen===1?'t':c), v:c}; ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\to = c; while(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o+=fmt.charAt(i);\n\t\t\t\tout[out.length] = {t:'D', v:o}; break;\n\t\t\tcase ' ': out[out.length] = {t:c, v:c}; ++i; break;\n\t\t\tcase '$': out[out.length] = {t:'t', v:'$'}; ++i; break;\n\t\t\tdefault:\n\t\t\t\tif(\",$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n\t\t\t\tout[out.length] = {t:'t', v:c}; ++i; break;\n\t\t}\n\t}\n\n\t/* Scan for date/time parts */\n\tvar bt = 0, ss0 = 0, ssm;\n\tfor(i=out.length-1, lst='t'; i >= 0; --i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 'h': case 'H': out[i].t = hr; lst='h'; if(bt < 1) bt = 1; break;\n\t\t\tcase 's':\n\t\t\t\tif((ssm=out[i].v.match(/\\.0+$/))) ss0=Math.max(ss0,ssm[0].length-1);\n\t\t\t\tif(bt < 3) bt = 3;\n\t\t\t/* falls through */\n\t\t\tcase 'd': case 'y': case 'M': case 'e': lst=out[i].t; break;\n\t\t\tcase 'm': if(lst === 's') { out[i].t = 'M'; if(bt < 2) bt = 2; } break;\n\t\t\tcase 'X': /*if(out[i].v === \"B2\");*/\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\tif(bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\n\t\t\t\tif(bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\n\t\t\t\tif(bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\n\t\t}\n\t}\n\t/* time rounding depends on presence of minute / second / usec fields */\n\tswitch(bt) {\n\t\tcase 0: break;\n\t\tcase 1:\nif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tif(dt.M >=  60) { dt.M = 0; ++dt.H; }\n\t\t\tbreak;\n\t\tcase 2:\nif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tbreak;\n\t}\n\n\t/* replace fields */\n\tvar nstr = \"\", jj;\n\tfor(i=0; i < out.length; ++i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 't': case 'T': case ' ': case 'D': break;\n\t\t\tcase 'X': out[i].v = \"\"; out[i].t = \";\"; break;\n\t\t\tcase 'd': case 'm': case 'y': case 'h': case 'H': case 'M': case 's': case 'e': case 'b': case 'Z':\nout[i].v = write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n\t\t\t\tout[i].t = 't'; break;\n\t\t\tcase 'n': case '?':\n\t\t\t\tjj = i+1;\n\t\t\t\twhile(out[jj] != null && (\n\t\t\t\t\t(c=out[jj].t) === \"?\" || c === \"D\" ||\n\t\t\t\t\t((c === \" \" || c === \"t\") && out[jj+1] != null && (out[jj+1].t === '?' || out[jj+1].t === \"t\" && out[jj+1].v === '/')) ||\n\t\t\t\t\t(out[i].t === '(' && (c === ' ' || c === 'n' || c === ')')) ||\n\t\t\t\t\t(c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj+1] != null && out[jj+1].t == '?'))\n\t\t\t\t)) {\n\t\t\t\t\tout[i].v += out[jj].v;\n\t\t\t\t\tout[jj] = {v:\"\", t:\";\"}; ++jj;\n\t\t\t\t}\n\t\t\t\tnstr += out[i].v;\n\t\t\t\ti = jj-1; break;\n\t\t\tcase 'G': out[i].t = 't'; out[i].v = general_fmt(v,opts); break;\n\t\t}\n\t}\n\tvar vv = \"\", myv, ostr;\n\tif(nstr.length > 0) {\n\t\tif(nstr.charCodeAt(0) == 40) /* '(' */ {\n\t\t\tmyv = (v<0&&nstr.charCodeAt(0) === 45 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t} else {\n\t\t\tmyv = (v<0 && flen > 1 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t\tif(myv < 0 && out[0] && out[0].t == 't') {\n\t\t\t\tostr = ostr.substr(1);\n\t\t\t\tout[0].v = \"-\" + out[0].v;\n\t\t\t}\n\t\t}\n\t\tjj=ostr.length-1;\n\t\tvar decpt = out.length;\n\t\tfor(i=0; i < out.length; ++i) if(out[i] != null && out[i].t != 't' && out[i].v.indexOf(\".\") > -1) { decpt = i; break; }\n\t\tvar lasti=out.length;\n\t\tif(decpt === out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tfor(i=out.length-1; i>= 0;--i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tif(jj>=out[i].v.length-1) { jj -= out[i].v.length; out[i].v = ostr.substr(jj+1, out[i].v.length); }\n\t\t\t\telse if(jj < 0) out[i].v = \"\";\n\t\t\t\telse { out[i].v = ostr.substr(0, jj+1); jj = -1; }\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t}\n\t\telse if(decpt !== out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tjj = ostr.indexOf(\".\")-1;\n\t\t\tfor(i=decpt; i>= 0; --i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")-1:out[i].v.length-1;\n\t\t\t\tvv = out[i].v.substr(j+1);\n\t\t\t\tfor(; j>=0; --j) {\n\t\t\t\t\tif(jj>=0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t\tjj = ostr.indexOf(\".\")+1;\n\t\t\tfor(i=decpt; i<out.length; ++i) {\n\t\t\t\tif(out[i] == null || ('n?('.indexOf(out[i].t) === -1 && i !== decpt)) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")+1:0;\n\t\t\t\tvv = out[i].v.substr(0,j);\n\t\t\t\tfor(; j<out[i].v.length; ++j) {\n\t\t\t\t\tif(jj<ostr.length) vv += ostr.charAt(jj++);\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0; i<out.length; ++i) if(out[i] != null && 'n?'.indexOf(out[i].t)>-1) {\n\t\tmyv = (flen >1 && v < 0 && i>0 && out[i-1].v === \"-\" ? -v:v);\n\t\tout[i].v = write_num(out[i].t, out[i].v, myv);\n\t\tout[i].t = 't';\n\t}\n\tvar retval = \"\";\n\tfor(i=0; i !== out.length; ++i) if(out[i] != null) retval += out[i].v;\n\treturn retval;\n}\nSSF._eval = eval_fmt;\nvar cfregex = /\\[[=<>]/;\nvar cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\nfunction chkcond(v, rr) {\n\tif(rr == null) return false;\n\tvar thresh = parseFloat(rr[2]);\n\tswitch(rr[1]) {\n\t\tcase \"=\":  if(v == thresh) return true; break;\n\t\tcase \">\":  if(v >  thresh) return true; break;\n\t\tcase \"<\":  if(v <  thresh) return true; break;\n\t\tcase \"<>\": if(v != thresh) return true; break;\n\t\tcase \">=\": if(v >= thresh) return true; break;\n\t\tcase \"<=\": if(v <= thresh) return true; break;\n\t}\n\treturn false;\n}\nfunction choose_fmt(f, v) {\n\tvar fmt = split_fmt(f);\n\tvar l = fmt.length, lat = fmt[l-1].indexOf(\"@\");\n\tif(l<4 && lat>-1) --l;\n\tif(fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\n\tif(typeof v !== \"number\") return [4, fmt.length === 4 || lat>-1?fmt[fmt.length-1]:\"@\"];\n\tswitch(fmt.length) {\n\t\tcase 1: fmt = lat>-1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"]; break;\n\t\tcase 2: fmt = lat>-1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"]; break;\n\t\tcase 3: fmt = lat>-1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"]; break;\n\t\tcase 4: break;\n\t}\n\tvar ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n\tif(fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\n\tif(fmt[0].match(cfregex) != null || fmt[1].match(cfregex) != null) {\n\t\tvar m1 = fmt[0].match(cfregex2);\n\t\tvar m2 = fmt[1].match(cfregex2);\n\t\treturn chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\n\t}\n\treturn [l, ff];\n}\nfunction format(fmt,v,o) {\n\tif(o == null) o = {};\n\tvar sfmt = \"\";\n\tswitch(typeof fmt) {\n\t\tcase \"string\":\n\t\t\tif(fmt == \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = fmt;\n\t\t\tbreak;\n\t\tcase \"number\":\n\t\t\tif(fmt == 14 && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = (o.table != null ? (o.table) : table_fmt)[fmt];\n\t\t\tif(sfmt == null) sfmt = (o.table && o.table[default_map[fmt]]) || table_fmt[default_map[fmt]];\n\t\t\tif(sfmt == null) sfmt = default_str[fmt] || \"General\";\n\t\t\tbreak;\n\t}\n\tif(isgeneral(sfmt,0)) return general_fmt(v, o);\n\tif(v instanceof Date) v = datenum_local(v, o.date1904);\n\tvar f = choose_fmt(sfmt, v);\n\tif(isgeneral(f[1])) return general_fmt(v, o);\n\tif(v === true) v = \"TRUE\"; else if(v === false) v = \"FALSE\";\n\telse if(v === \"\" || v == null) return \"\";\n\treturn eval_fmt(f[1], v, o, f[0]);\n}\nfunction load_entry(fmt, idx) {\n\tif(typeof idx != 'number') {\n\t\tidx = +idx || -1;\nfor(var i = 0; i < 0x0188; ++i) {\nif(table_fmt[i] == undefined) { if(idx < 0) idx = i; continue; }\n\t\t\tif(table_fmt[i] == fmt) { idx = i; break; }\n\t\t}\nif(idx < 0) idx = 0x187;\n\t}\ntable_fmt[idx] = fmt;\n\treturn idx;\n}\nSSF.load = load_entry;\nSSF._table = table_fmt;\nSSF.get_table = function get_table() { return table_fmt; };\nSSF.load_table = function load_table(tbl) {\n\tfor(var i=0; i!=0x0188; ++i)\n\t\tif(tbl[i] !== undefined) load_entry(tbl[i], i);\n};\nSSF.init_table = init_table;\nSSF.format = format;\n};\nmake_ssf(SSF);\n/*global module */\nif(typeof module !== 'undefined' && typeof DO_NOT_EXPORT_SSF === 'undefined') module.exports = SSF;\n", "import ssf from 'ssf';\nimport { getContext } from 'svelte';\nimport { CUSTOM_FORMATTING_SETTINGS_CONTEXT_KEY } from './globalContexts';\nimport { findImplicitAutoFormat, autoFormat, fallbackFormat, isAutoFormat } from './autoFormatting';\nimport { BUILT_IN_FORMATS } from './builtInFormats';\nimport { standardizeDateString } from './dateParsing';\nimport { inferValueType } from './inferColumnTypes';\n\nconst AXIS_FORMATTING_CONTEXT = 'axis';\nconst VALUE_FORMATTING_CONTEXT = 'value';\n\nexport const getCustomFormats = () => {\n\ttry {\n\t\treturn getContext(CUSTOM_FORMATTING_SETTINGS_CONTEXT_KEY)?.getCustomFormats() || [];\n\t} catch (error) {\n\t\treturn [];\n\t}\n};\n\n/**\n * @param {*} columnName the name of the column\n * @returns a format object (built-in or custom) based on the column name if it matches the pattern column_${formatTag}, otherwise returns undefined\n */\nexport const lookupColumnFormat = (columnName, columnEvidenceType, columnUnitSummary) => {\n\tlet potentialFormatTag = maybeExtractFormatTag(columnName);\n\n\tif (columnEvidenceType.evidenceType === 'string') {\n\t\treturn undefined;\n\t}\n\n\tif (potentialFormatTag) {\n\t\tlet customFormats = getCustomFormats();\n\t\tlet matchingFormat = [...BUILT_IN_FORMATS, ...customFormats].find(\n\t\t\t(format) => format.formatTag?.toLowerCase() === potentialFormatTag?.toLowerCase?.()\n\t\t);\n\t\tif (matchingFormat) {\n\t\t\treturn matchingFormat;\n\t\t}\n\t}\n\n\tlet matchingImplicitAutoFormat = findImplicitAutoFormat(\n\t\tcolumnName,\n\t\tcolumnEvidenceType,\n\t\tcolumnUnitSummary\n\t);\n\tif (matchingImplicitAutoFormat) {\n\t\treturn matchingImplicitAutoFormat;\n\t}\n\n\treturn undefined;\n};\n\n/**\n * Returns an Evidence format object to be used in the applyFormatting function\n * @param {string} formatString string containing an Excel-style format code, or a format name matching a built-in or custom format\n * @param {'number' | 'date' | 'boolean' | 'string'} [valueType] optional - a string representing the data type within the column that will be formatted ('number', 'date', 'boolean', or 'string)\n * @returns a format object based on the formatString matching a built-in or custom format name, or a new custom format object containing an Excel-style format code\n */\nexport function getFormatObjectFromString(formatString, valueType = undefined) {\n\tlet potentialFormatTag = formatString;\n\tlet customFormats = getCustomFormats();\n\tlet matchingFormat = [...BUILT_IN_FORMATS, ...customFormats].find(\n\t\t(format) => format.formatTag?.toLowerCase() === potentialFormatTag?.toLowerCase?.()\n\t);\n\tlet newFormat = {};\n\tif (matchingFormat) {\n\t\treturn matchingFormat;\n\t} else {\n\t\tnewFormat = {\n\t\t\tformatTag: 'custom',\n\t\t\tformatCode: potentialFormatTag\n\t\t};\n\t\tif (valueType) {\n\t\t\tnewFormat.valueType = valueType;\n\t\t}\n\t\treturn newFormat;\n\t}\n}\n\nexport const formatValue = (value, columnFormat = undefined, columnUnitSummary = undefined) => {\n\ttry {\n\t\treturn applyFormatting(value, columnFormat, columnUnitSummary, VALUE_FORMATTING_CONTEXT);\n\t} catch (error) {\n\t\t//fallback to default\n\t\tconsole.warn(\n\t\t\t`Unexpected error calling applyFormatting(${value}, ${columnFormat}, ${VALUE_FORMATTING_CONTEXT}, ${columnUnitSummary}). Error=${error}`\n\t\t);\n\t\treturn value;\n\t}\n};\n\nexport const formatAxisValue = (value, columnFormat = undefined, columnUnitSummary = undefined) => {\n\ttry {\n\t\treturn applyFormatting(value, columnFormat, columnUnitSummary, AXIS_FORMATTING_CONTEXT);\n\t} catch (error) {\n\t\t//fallback to default\n\t}\n\treturn value;\n};\n\nexport const applyTitleTagReplacement = (columnName, columnFormatSettings) => {\n\tlet result = columnName;\n\tif (columnName && columnFormatSettings?.formatTag) {\n\t\tlet lastIndexOfTag = columnName\n\t\t\t.toLowerCase()\n\t\t\t.lastIndexOf(`_${columnFormatSettings.formatTag.toLowerCase()}`);\n\t\tlet titleTagReplacement = '';\n\t\tif (lastIndexOfTag > 0) {\n\t\t\t//explicitly ignore columns starting with _, hence >0 instead of => 0\n\t\t\tif (typeof columnFormatSettings?.titleTagReplacement === 'string') {\n\t\t\t\ttitleTagReplacement = columnFormatSettings.titleTagReplacement;\n\t\t\t}\n\t\t\tresult = columnName.substring(0, lastIndexOfTag) + titleTagReplacement;\n\t\t}\n\t}\n\treturn result;\n};\n\nexport const defaultExample = (valueType) => {\n\tswitch (valueType) {\n\t\tcase 'number':\n\t\t\treturn 1234;\n\t\tcase 'date':\n\t\t\treturn '2022-01-03';\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n};\n\nexport const formatExample = (format) => {\n\tlet normalizedUserInput = format.userInput?.trim();\n\tlet preFormattedValue =\n\t\tnormalizedUserInput || format.exampleInput || defaultExample(format.valueType);\n\n\tif (preFormattedValue) {\n\t\ttry {\n\t\t\tlet columnUnitSummary = undefined;\n\t\t\tif (format.valueType === 'number') {\n\t\t\t\tlet numericValue = Number(preFormattedValue);\n\t\t\t\tcolumnUnitSummary = {\n\t\t\t\t\tmin: numericValue,\n\t\t\t\t\tmax: numericValue,\n\t\t\t\t\tmedian: numericValue,\n\t\t\t\t\tmaxDecimals: numericValue.toString().split('.')[1]?.length || 0,\n\t\t\t\t\tunitType: 'number'\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn applyFormatting(\n\t\t\t\tpreFormattedValue,\n\t\t\t\tformat,\n\t\t\t\tcolumnUnitSummary,\n\t\t\t\tVALUE_FORMATTING_CONTEXT\n\t\t\t);\n\t\t} catch (error) {\n\t\t\t//return default value\n\t\t}\n\t}\n\treturn '';\n};\n\nfunction applyFormatting(\n\tvalue,\n\tcolumnFormat = undefined,\n\tcolumnUnitSummary = undefined,\n\tformattingContext = VALUE_FORMATTING_CONTEXT\n) {\n\tif (value === undefined || value === null) {\n\t\treturn '-';\n\t}\n\n\tlet result = undefined;\n\tif (columnFormat) {\n\t\ttry {\n\t\t\tlet formattingCode = getEffectiveFormattingCode(columnFormat, formattingContext);\n\t\t\tlet typedValue;\n\t\t\ttry {\n\t\t\t\tif (columnFormat.valueType === 'date' && typeof value === 'string') {\n\t\t\t\t\ttypedValue = new Date(standardizeDateString(value));\n\t\t\t\t} else if (value instanceof Date) {\n\t\t\t\t\t// \"2023-09-06T22:40:43.000Z\" minus the Z is interpreted\n\t\t\t\t\t// as local time\n\t\t\t\t\t// similar in behavior to standardizeDateString\n\t\t\t\t\ttypedValue = new Date(value.toISOString().slice(0, -1));\n\t\t\t\t} else if (\n\t\t\t\t\tcolumnFormat.valueType === 'number' &&\n\t\t\t\t\ttypeof value !== 'number' &&\n\t\t\t\t\t!Number.isNaN(value)\n\t\t\t\t) {\n\t\t\t\t\ttypedValue = Number(value);\n\t\t\t\t} else {\n\t\t\t\t\ttypedValue = value;\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\ttypedValue = value;\n\t\t\t}\n\t\t\tif (isAutoFormat(columnFormat, formattingCode)) {\n\t\t\t\ttry {\n\t\t\t\t\tresult = autoFormat(typedValue, columnFormat, columnUnitSummary);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.warn(`Unexpected error applying auto formatting. Error=${error}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult = ssf.format(formattingCode, typedValue);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.warn(`Unexpected error applying formatting ${error}`);\n\t\t}\n\t}\n\tif (result === undefined) {\n\t\tresult = fallbackFormat(value, columnUnitSummary);\n\t}\n\treturn result;\n}\nfunction getEffectiveFormattingCode(columnFormat, formattingContext = VALUE_FORMATTING_CONTEXT) {\n\tif (typeof columnFormat === 'string') {\n\t\t// This should only be used by end users, not by components.\n\t\treturn columnFormat;\n\t} else {\n\t\tif (formattingContext === AXIS_FORMATTING_CONTEXT && columnFormat?.axisFormatCode) {\n\t\t\treturn columnFormat.axisFormatCode;\n\t\t}\n\t\treturn columnFormat?.formatCode;\n\t}\n}\n\n/**\n * Extracts a possible format tag from a column name based on the column name pattern\n * @returns \"column_${formatTag}\" will return ${formatTag} or undefined if the columnName doesn't match the pattern\n */\nfunction maybeExtractFormatTag(columnName) {\n\tlet normalizedColName = columnName.toLowerCase();\n\tlet lastUnderScoreIndex = normalizedColName.lastIndexOf('_');\n\n\tif (lastUnderScoreIndex > 0) {\n\t\treturn normalizedColName.substr(lastUnderScoreIndex).replace('_', '');\n\t} else {\n\t\treturn undefined;\n\t}\n}\n\n/**\n * Formats a value to whichever format is passed in\n * @param {*} value the value to be formatted\n * @param {string} format string containing an Excel-style format code, or a format name matching a built-in or custom format\n * @returns a formatted value\n */\nexport function fmt(value, format) {\n\tlet formatObj = getFormatObjectFromString(format);\n\tlet valueType = inferValueType(value);\n\tformatObj.valueType = valueType;\n\treturn formatValue(value, formatObj);\n}\n", "import ssf from 'ssf';\n\nexport const AUTO_FORMAT_CODE = 'auto';\n\n/**\n * The number of units to display the median value in the series\n */\nconst AUTO_FORMAT_MEDIAN_PRECISION = 3;\n/**\n * Describes implicit formats for columns having a certain name pattern and an evidence type (matched via matchingFunction).\n * This will only be applied to columns that cannot be matched to existing custom or built-in formats.\n * These won't be shown in the settings panel.\n * The ORDER in the array will take precedence as a columnName/evidenceType can be matched to multiple formats\n */\nconst IMPLICIT_COLUMN_AUTO_FORMATS = [\n\t{\n\t\tname: 'year',\n\t\tdescription:\n\t\t\t'When lowerCase(columnName)=\"year\" with the column having numeric values will result in no formatting',\n\t\tmatchingFunction: (columnName, evidenceTypeDescriptor, columnUnitSummary) => {\n\t\t\tif (columnName && evidenceTypeDescriptor) {\n\t\t\t\treturn (\n\t\t\t\t\t'year' === columnName.toLowerCase() &&\n\t\t\t\t\t(evidenceTypeDescriptor?.evidenceType === 'number' ||\n\t\t\t\t\t\tcolumnUnitSummary?.unitType === 'number')\n\t\t\t\t); //TODO use evidence type constant\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tformat: {\n\t\t\tformatCode: AUTO_FORMAT_CODE,\n\t\t\tvalueType: 'number',\n\t\t\texampleInput: 2013,\n\t\t\t_autoFormat: {\n\t\t\t\tautoFormatCode: '@',\n\t\t\t\ttruncateUnits: false\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\tname: 'id',\n\t\tdescription:\n\t\t\t'When lowerCase(columnName)=\"id\" with the column having numeric values, then values will have no formatting',\n\t\tmatchingFunction: (columnName, evidenceTypeDescriptor, columnUnitSummary) => {\n\t\t\tif (columnName && evidenceTypeDescriptor) {\n\t\t\t\treturn (\n\t\t\t\t\t'id' === columnName.toLowerCase() &&\n\t\t\t\t\t(evidenceTypeDescriptor?.evidenceType === 'number' ||\n\t\t\t\t\t\tcolumnUnitSummary?.unitType === 'number')\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tformat: {\n\t\t\tformatCode: AUTO_FORMAT_CODE,\n\t\t\tvalueType: 'number',\n\t\t\texampleInput: 93120121,\n\t\t\t_autoFormat: {\n\t\t\t\tautoFormatFunction: (typedValue) => {\n\t\t\t\t\tif (typedValue !== null && typedValue !== undefined && !isNaN(typedValue)) {\n\t\t\t\t\t\treturn typedValue.toLocaleString('fullwide', {\n\t\t\t\t\t\t\tuseGrouping: false\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn typedValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\tname: 'defaultDate',\n\t\tdescription: 'Formatting for Default Date',\n\t\tmatchingFunction: (columnName, evidenceTypeDescriptor, columnUnitSummary) => {\n\t\t\tif (evidenceTypeDescriptor) {\n\t\t\t\treturn (\n\t\t\t\t\tevidenceTypeDescriptor?.evidenceType === 'date' || columnUnitSummary?.unitType === 'date'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tformat: {\n\t\t\tformatCode: AUTO_FORMAT_CODE,\n\t\t\tvalueType: 'date',\n\t\t\texampleInput: 'Sat Jan 01 2022 03:15:00 GMT-0500',\n\t\t\t_autoFormat: {\n\t\t\t\tautoFormatCode: 'YYYY-MM-DD',\n\t\t\t\ttruncateUnits: false\n\t\t\t}\n\t\t}\n\t}\n];\n\n/**\n *\n * @param {number | undefined} value\n * @param {string} unit\n * @returns {number | undefined} the value in the given unit\n */\nexport const applyColumnUnits = (value, unit) => {\n\tswitch (unit) {\n\t\tcase 'T':\n\t\t\treturn value / 1000000000000;\n\t\tcase 'B':\n\t\t\treturn value / 1000000000;\n\t\tcase 'M':\n\t\t\treturn value / 1000000;\n\t\tcase 'k':\n\t\t\treturn value / 1000;\n\t\tdefault:\n\t\t\treturn value;\n\t}\n};\n\n/**\n *\n * @param {*} format the format to update with auto formatting\n * @param {*} formatCode the code to use\n * @param {*} truncateNumbers should k, M, B column units be applied?\n * @returns the format\n */\nexport const configureAutoFormatting = (format, formatCode = '@', truncateUnits = false) => {\n\tformat._autoFormat = {\n\t\tautoFormatCode: formatCode,\n\t\ttruncateUnits: truncateUnits\n\t};\n\treturn format;\n};\n\nexport const isAutoFormat = (format, effectiveCode) => {\n\tlet matchesCode = (effectiveCode || format.formatCode)?.toLowerCase() === AUTO_FORMAT_CODE;\n\tlet autoFormatCode = format._autoFormat?.autoFormatFunction || format._autoFormat?.autoFormatCode;\n\tif (matchesCode && autoFormatCode !== undefined) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\n\nexport const generateImplicitNumberFormat = (columnUnitSummary, maxDisplayDecimals = 7) => {\n\tlet effectiveFormatCode;\n\tlet columnUnits = '';\n\n\tlet median = columnUnitSummary?.median;\n\tlet truncateUnits;\n\n\tif (median !== undefined) {\n\t\tlet medianInUnitTerms;\n\t\tcolumnUnits = getAutoColumnUnit(median);\n\t\tif (columnUnits) {\n\t\t\tmedianInUnitTerms = applyColumnUnits(median, columnUnits);\n\t\t\ttruncateUnits = true;\n\t\t} else {\n\t\t\tmedianInUnitTerms = median;\n\t\t\ttruncateUnits = false;\n\t\t}\n\n\t\tif (columnUnitSummary.maxDecimals === 0 && !truncateUnits) {\n\t\t\teffectiveFormatCode = '#,##0';\n\t\t} else {\n\t\t\teffectiveFormatCode = computeNumberAutoFormatCode(medianInUnitTerms, maxDisplayDecimals);\n\t\t}\n\t} else {\n\t\teffectiveFormatCode = '#,##0';\n\t\ttruncateUnits = false;\n\t}\n\n\treturn {\n\t\tformatCode: AUTO_FORMAT_CODE,\n\t\tvalueType: 'number',\n\t\t_autoFormat: {\n\t\t\tautoFormatCode: effectiveFormatCode,\n\t\t\ttruncateUnits: truncateUnits,\n\t\t\tcolumnUnits: columnUnits\n\t\t}\n\t};\n};\n\nexport const findImplicitAutoFormat = (columnName, evidenceTypeDescriptor, columnUnitSummary) => {\n\tlet matched = IMPLICIT_COLUMN_AUTO_FORMATS.find((implicitFormat) =>\n\t\timplicitFormat.matchingFunction(columnName, evidenceTypeDescriptor, columnUnitSummary)\n\t);\n\tif (matched) {\n\t\treturn matched.format;\n\t} else {\n\t\tif (columnUnitSummary?.unitType === 'number') {\n\t\t\treturn generateImplicitNumberFormat(columnUnitSummary);\n\t\t}\n\t}\n\treturn undefined;\n};\n\n/**\n * Formatting logic for formats with formatCode=AUTO_FORMAT_CODE\n * @param {*} typedValue the value to be formatted\n * @param {*} columnFormat the auto formatting description with _autoFormat settings\n * @param {*} columnUnitSummary the summary of units in the column (only applicable to numbered columns)\n * @returns formattedv value\n */\nexport const autoFormat = (typedValue, columnFormat, columnUnitSummary = undefined) => {\n\tif (columnFormat._autoFormat?.autoFormatFunction) {\n\t\treturn columnFormat._autoFormat.autoFormatFunction(typedValue, columnFormat, columnUnitSummary);\n\t} else if (columnFormat._autoFormat.autoFormatCode) {\n\t\tlet autoFormatCode = columnFormat?._autoFormat?.autoFormatCode;\n\t\tlet valueType = columnFormat.valueType;\n\t\tif ('number' === valueType) {\n\t\t\tlet truncateUnits = columnFormat?._autoFormat?.truncateUnits;\n\n\t\t\tlet unitValue = typedValue;\n\t\t\tlet unit = '';\n\n\t\t\tif (truncateUnits && columnUnitSummary?.median !== undefined) {\n\t\t\t\t//use of median is a bit detached here. Perhaps _autoFormat.truncateUnits could instead be _autoFormat.columnUnits=k|M|B (already done for default currency)\n\t\t\t\t//this will affect the auto currency formatting since they simply rely on the median. Perhaps they should be functions instead.\n\t\t\t\tunit = getAutoColumnUnit(columnUnitSummary.median);\n\t\t\t\tunitValue = applyColumnUnits(typedValue, unit);\n\t\t\t}\n\t\t\treturn ssf.format(autoFormatCode, unitValue) + unit;\n\t\t} else {\n\t\t\treturn ssf.format(autoFormatCode, typedValue);\n\t\t}\n\t} else {\n\t\tconsole.warn('autoFormat called without a formatCode or function');\n\t}\n\treturn typedValue;\n};\n\n/**\n * Formatting for any column without formatting settings\n * @param {*} typedValue a value of type number|date|string\n * @returns the formatted value\n */\nexport const fallbackFormat = (typedValue) => {\n\tif (typeof typedValue === 'number') {\n\t\treturn typedValue.toLocaleString(undefined, {\n\t\t\tminimumFractionDigits: 0,\n\t\t\tmaximumFractionDigits: 2\n\t\t});\n\t} else if (typedValue !== undefined && typedValue !== null) {\n\t\treturn typedValue?.toString();\n\t} else {\n\t\treturn '-';\n\t}\n};\n\n//TODO: use rewire.js to enable testing without exporting.\n/**\n * @param {number} referenceValue\n * @returns {string} the number format code for the given reference value\n */\nexport function computeNumberAutoFormatCode(\n\treferenceValue,\n\tmaxDisplayDecimals = 7,\n\tsignificantDigits = AUTO_FORMAT_MEDIAN_PRECISION\n) {\n\tlet formatCodeBuilder = '#,##0';\n\n\tlet referenceValueLeadingDigitExponent = base10Exponent(referenceValue);\n\tlet displayDecimals = 0;\n\n\tif (referenceValueLeadingDigitExponent - significantDigits < 0) {\n\t\tdisplayDecimals = Math.min(\n\t\t\tMath.max(Math.abs(referenceValueLeadingDigitExponent - significantDigits + 1), 0),\n\t\t\tmaxDisplayDecimals\n\t\t);\n\t}\n\n\tif (displayDecimals > 0) {\n\t\tformatCodeBuilder += '.';\n\t\tformatCodeBuilder += '0'.repeat(displayDecimals);\n\t}\n\n\treturn formatCodeBuilder;\n}\n\n/**\n * @param {number | undefined} value\n * @returns {string} the appropriate unit (B, M, k or '') for the given value\n */\nfunction getAutoColumnUnit(value) {\n\tlet absoluteValue = Math.abs(value);\n\tif (absoluteValue >= 5000000000000) {\n\t\treturn 'T';\n\t} else if (absoluteValue >= 5000000000) {\n\t\treturn 'B';\n\t} else if (absoluteValue >= 5000000) {\n\t\treturn 'M';\n\t} else if (absoluteValue >= 5000) {\n\t\treturn 'k';\n\t} else {\n\t\treturn '';\n\t}\n}\n\nfunction base10Exponent(value) {\n\tif (value === 0) {\n\t\treturn 0;\n\t} else {\n\t\treturn Math.floor(Math.log10(value));\n\t}\n}\n", "import { AUTO_FORMAT_CODE, applyColumnUnits, generateImplicitNumberFormat } from './autoFormatting';\nimport ssf from 'ssf';\n\nexport const SUPPORTED_CURRENCIES = [\n\t{\n\t\tprimaryCode: 'usd',\n\t\tcurrencySymbol: '$',\n\t\tdisplayName: 'USD - United States Dollar'\n\t},\n\t{\n\t\tprimaryCode: 'aud',\n\t\tcurrencySymbol: 'A$',\n\t\tdisplayName: 'AUD - Australian Dollar',\n\t\tescapeCurrencySymbol: true\n\t},\n\t{\n\t\tprimaryCode: 'brl',\n\t\tcurrencySymbol: 'R$',\n\t\tdisplayName: 'BRL - Brazilian Real',\n\t\tescapeCurrencySymbol: true\n\t},\n\t{\n\t\tprimaryCode: 'cad',\n\t\tcurrencySymbol: 'C$',\n\t\tdisplayName: 'CAD - Canadian Dollar',\n\t\tescapeCurrencySymbol: true\n\t},\n\t{\n\t\tprimaryCode: 'cny',\n\t\tcurrencySymbol: '¥',\n\t\tdisplayName: 'CNY - Renminbi',\n\t\tescapeCurrencySymbol: true\n\t},\n\t{ primaryCode: 'eur', currencySymbol: '€', displayName: 'EUR - Euro' },\n\t{\n\t\tprimaryCode: 'gbp',\n\t\tcurrencySymbol: '£',\n\t\tdisplayName: 'GBP - Pound Sterling',\n\t\tescapeCurrencySymbol: true\n\t},\n\t{\n\t\tprimaryCode: 'jpy',\n\t\tcurrencySymbol: '¥',\n\t\tdisplayName: 'JPY - Japanese Yen',\n\t\tescapeCurrencySymbol: true\n\t},\n\t{\n\t\tprimaryCode: 'inr',\n\t\tcurrencySymbol: '₹',\n\t\tdisplayName: 'INR - Indian Rupee',\n\t\tescapeCurrencySymbol: true\n\t},\n\t{\n\t\tprimaryCode: 'krw',\n\t\tcurrencySymbol: '₩',\n\t\tdisplayName: 'KRW - South Korean won',\n\t\tescapeCurrencySymbol: true\n\t},\n\t{\n\t\tprimaryCode: 'ngn',\n\t\tcurrencySymbol: '₦',\n\t\tdisplayName: 'NGN -  Nigerian Naira',\n\t\tescapeCurrencySymbol: true\n\t},\n\t{\n\t\tprimaryCode: 'rub',\n\t\tcurrencySymbol: 'rub',\n\t\tdisplayName: 'RUB - Russian Ruble',\n\t\tescapeCurrencySymbol: true\n\t},\n\t{\n\t\tprimaryCode: 'sek',\n\t\tcurrencySymbol: 'kr',\n\t\tdisplayName: 'SEK - Swedish Krona',\n\t\tescapeCurrencySymbol: true\n\t}\n];\n\nconst DERIVED_CURRENCY_FORMATS = [\n\t{\n\t\tderivedSuffix: '',\n\t\tvalueFormatCode: '#,##0',\n\t\texampleInput: 412.17,\n\t\tauto: true\n\t},\n\t{\n\t\tderivedSuffix: '0',\n\t\tvalueFormatCode: '#,##0',\n\t\texampleInput: 7043.123\n\t},\n\t{\n\t\tderivedSuffix: '1',\n\t\tvalueFormatCode: '#,##0.0',\n\t\texampleInput: 7043.123\n\t},\n\t{\n\t\tderivedSuffix: '2',\n\t\tvalueFormatCode: '#,##0.00',\n\t\texampleInput: 7043.123\n\t},\n\t{\n\t\tderivedSuffix: '0k',\n\t\tvalueFormatCode: '#,##0,\"k\"',\n\t\texampleInput: 64301.12\n\t},\n\t{\n\t\tderivedSuffix: '1k',\n\t\tvalueFormatCode: '#,##0.0,\"k\"',\n\t\texampleInput: 64301.12\n\t},\n\t{\n\t\tderivedSuffix: '2k',\n\t\tvalueFormatCode: '#,##0.00,\"k\"',\n\t\texampleInput: 64301.12\n\t},\n\t{\n\t\tderivedSuffix: '0m',\n\t\tvalueFormatCode: '#,##0,,\"M\"',\n\t\texampleInput: 4564301.12\n\t},\n\t{\n\t\tderivedSuffix: '1m',\n\t\tvalueFormatCode: '#,##0.0,,\"M\"',\n\t\texampleInput: 4564301.12\n\t},\n\t{\n\t\tderivedSuffix: '2m',\n\t\tvalueFormatCode: '#,##0.00,,\"M\"',\n\t\texampleInput: 4564301.12\n\t},\n\t{\n\t\tderivedSuffix: '0b',\n\t\tvalueFormatCode: '#,##0,,,\"B\"',\n\t\texampleInput: 9784564301.12\n\t},\n\t{\n\t\tderivedSuffix: '1b',\n\t\tvalueFormatCode: '#,##0.0,,,\"B\"',\n\t\texampleInput: 9784564301.12\n\t},\n\t{\n\t\tderivedSuffix: '2b',\n\t\tvalueFormatCode: '#,##0.00,,,\"B\"',\n\t\texampleInput: 9784564301.12\n\t}\n];\n\nconst CURRENCY_FORMATS = SUPPORTED_CURRENCIES.map((currency) => {\n\tlet derivedFormats = [];\n\tDERIVED_CURRENCY_FORMATS.forEach((derivedFormat) => {\n\t\tlet next = {\n\t\t\tformatTag: currency.primaryCode + derivedFormat.derivedSuffix,\n\t\t\tparentFormat: currency.primaryCode,\n\t\t\tformatCategory: 'currency',\n\t\t\tvalueType: 'number',\n\t\t\texampleInput: derivedFormat.exampleInput,\n\t\t\ttitleTagReplacement: ` (${currency.currencySymbol})`\n\t\t};\n\t\tlet symbolInFormatCode = currency.escapeCurrencySymbol\n\t\t\t? `\"${currency.currencySymbol}\"`\n\t\t\t: currency.currencySymbol;\n\t\tif (derivedFormat.auto || AUTO_FORMAT_CODE === derivedFormat.formatCode) {\n\t\t\tnext.formatCode = AUTO_FORMAT_CODE;\n\t\t\t//TODO This should be fixed so that 1)the format is NOT recomputed for each value, 2)remove some of magic is done to make it look good.\n\t\t\tnext._autoFormat = {\n\t\t\t\tautoFormatFunction: (typedValue, columnFormat, columnUnitSummary) => {\n\t\t\t\t\tlet format = generateImplicitNumberFormat(columnUnitSummary, 2);\n\t\t\t\t\tlet effectiveCode = `${symbolInFormatCode}${format._autoFormat.autoFormatCode}`;\n\t\t\t\t\tlet suffix = '';\n\t\t\t\t\tlet displayValue = typedValue;\n\t\t\t\t\tif (format._autoFormat.truncateUnits && format._autoFormat.columnUnits) {\n\t\t\t\t\t\tsuffix = format._autoFormat.columnUnits;\n\t\t\t\t\t\tdisplayValue = applyColumnUnits(typedValue, format._autoFormat.columnUnits);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (effectiveCode.endsWith('.0')) {\n\t\t\t\t\t\t\teffectiveCode = effectiveCode + '0';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn ssf.format(effectiveCode, displayValue) + suffix;\n\t\t\t\t}\n\t\t\t};\n\t\t} else {\n\t\t\tnext.formatCode = `${symbolInFormatCode}${derivedFormat.valueFormatCode}`;\n\t\t}\n\t\tif (derivedFormat.axisValueFormatCode) {\n\t\t\tnext.axisFormatCode = derivedFormat.axisValueFormatCode;\n\t\t}\n\t\tderivedFormats.push(next);\n\t});\n\treturn derivedFormats;\n}).flat();\n\nexport const BUILT_IN_FORMATS = [\n\t...CURRENCY_FORMATS,\n\t//auto formats\n\t// Date/Time:\n\t{\n\t\tformatTag: 'ddd',\n\t\tformatCode: 'ddd',\n\t\tformatCategory: 'date',\n\t\tvalueType: 'date',\n\t\texampleInput: '2022-01-09 12:45'\n\t},\n\t{\n\t\tformatTag: 'dddd',\n\t\tformatCode: 'dddd',\n\t\tformatCategory: 'date',\n\t\tvalueType: 'date',\n\t\texampleInput: '2022-01-09 12:45'\n\t},\n\t{\n\t\tformatTag: 'mmm',\n\t\tformatCode: 'mmm',\n\t\tformatCategory: 'date',\n\t\tvalueType: 'date',\n\t\texampleInput: '2022-01-09 12:45'\n\t},\n\t{\n\t\tformatTag: 'mmmm',\n\t\tformatCode: 'mmmm',\n\t\tformatCategory: 'date',\n\t\tvalueType: 'date',\n\t\texampleInput: '2022-01-09 12:45'\n\t},\n\t{\n\t\tformatTag: 'yyyy',\n\t\tformatCode: 'yyyy',\n\t\tformatCategory: 'date',\n\t\tvalueType: 'date',\n\t\texampleInput: '2022-01-09 12:45'\n\t},\n\t{\n\t\tformatTag: 'shortdate',\n\t\tformatCode: 'mmm d/yy',\n\t\tformatCategory: 'date',\n\t\tvalueType: 'date',\n\t\texampleInput: '2022-01-09 12:45'\n\t},\n\t{\n\t\tformatTag: 'longdate',\n\t\tformatCode: 'mmmm d, yyyy',\n\t\tformatCategory: 'date',\n\t\tvalueType: 'date',\n\t\texampleInput: '2022-01-09 12:45'\n\t},\n\t{\n\t\tformatTag: 'fulldate',\n\t\tformatCode: 'dddd mmmm d, yyyy',\n\t\tformatCategory: 'date',\n\t\tvalueType: 'date',\n\t\texampleInput: '2022-01-09 12:45'\n\t},\n\t{\n\t\tformatTag: 'mdy',\n\t\tformatCode: 'm/d/y',\n\t\tformatCategory: 'date',\n\t\tvalueType: 'date',\n\t\texampleInput: '2022-01-09 12:45'\n\t},\n\t{\n\t\tformatTag: 'dmy',\n\t\tformatCode: 'd/m/y',\n\t\tformatCategory: 'date',\n\t\tvalueType: 'date',\n\t\texampleInput: '2022-01-09 12:45'\n\t},\n\t{\n\t\tformatTag: 'hms',\n\t\tformatCode: 'H:MM:SS AM/PM',\n\t\tformatCategory: 'date',\n\t\tvalueType: 'date',\n\t\texampleInput: '2022-01-09T11:45:03'\n\t},\n\t// Numbers:\n\t{\n\t\tformatTag: 'num0',\n\t\tformatCode: '#,##0',\n\t\tformatCategory: 'number',\n\t\tvalueType: 'number',\n\t\texampleInput: 11.23168\n\t},\n\t{\n\t\tformatTag: 'num1',\n\t\tformatCode: '#,##0.0',\n\t\tformatCategory: 'number',\n\t\tvalueType: 'number',\n\t\texampleInput: 11.23168\n\t},\n\t{\n\t\tformatTag: 'num2',\n\t\tformatCode: '#,##0.00',\n\t\tformatCategory: 'number',\n\t\tvalueType: 'number',\n\t\texampleInput: 11.23168\n\t},\n\t{\n\t\tformatTag: 'num3',\n\t\tformatCode: '#,##0.000',\n\t\tformatCategory: 'number',\n\t\tvalueType: 'number',\n\t\texampleInput: 11.23168\n\t},\n\t{\n\t\tformatTag: 'num4',\n\t\tformatCode: '#,##0.0000',\n\t\tformatCategory: 'number',\n\t\tvalueType: 'number',\n\t\texampleInput: 11.23168\n\t},\n\t{\n\t\tformatTag: 'num0k',\n\t\tformatCode: '#,##0,\"k\"',\n\t\tformatCategory: 'number',\n\t\tvalueType: 'number',\n\t\texampleInput: 64201\n\t},\n\t{\n\t\tformatTag: 'num1k',\n\t\tformatCode: '#,##0.0,\"k\"',\n\t\tformatCategory: 'number',\n\t\tvalueType: 'number',\n\t\texampleInput: 64201\n\t},\n\t{\n\t\tformatTag: 'num2k',\n\t\tformatCode: '#,##0.00,\"k\"',\n\t\tformatCategory: 'number',\n\t\tvalueType: 'number',\n\t\texampleInput: 64201\n\t},\n\t{\n\t\tformatTag: 'num0m',\n\t\tformatCode: '#,##0,,\"M\"',\n\t\tformatCategory: 'number',\n\t\tvalueType: 'number',\n\t\texampleInput: 42539483\n\t},\n\t{\n\t\tformatTag: 'num1m',\n\t\tformatCode: '#,##0.0,,\"M\"',\n\t\tformatCategory: 'number',\n\t\tvalueType: 'number',\n\t\texampleInput: 42539483\n\t},\n\t{\n\t\tformatTag: 'num2m',\n\t\tformatCode: '#,##0.00,,\"M\"',\n\t\tformatCategory: 'number',\n\t\tvalueType: 'number',\n\t\texampleInput: 42539483\n\t},\n\t{\n\t\tformatTag: 'num0b',\n\t\tformatCode: '#,##0,,,\"B\"',\n\t\tformatCategory: 'number',\n\t\tvalueType: 'number',\n\t\texampleInput: 1384937584\n\t},\n\t{\n\t\tformatTag: 'num1b',\n\t\tformatCode: '#,##0.0,,,\"B\"',\n\t\tformatCategory: 'number',\n\t\tvalueType: 'number',\n\t\texampleInput: 1384937584\n\t},\n\t{\n\t\tformatTag: 'num2b',\n\t\tformatCode: '#,##0.00,,,\"B\"',\n\t\tformatCategory: 'number',\n\t\tvalueType: 'number',\n\t\texampleInput: 1384937584\n\t},\n\t{\n\t\tformatTag: 'id',\n\t\tformatCode: '0',\n\t\tformatCategory: 'number',\n\t\tvalueType: 'number',\n\t\texampleInput: '921594675',\n\t\ttitleTagReplacement: ' id'\n\t},\n\t{\n\t\tformatTag: 'fract',\n\t\tformatCode: '# ?/?',\n\t\tformatCategory: 'number',\n\t\tvalueType: 'number',\n\t\texampleInput: '0.25'\n\t},\n\t{\n\t\tformatTag: 'mult',\n\t\tformatCode: '#,##0.0\"x\"',\n\t\tformatCategory: 'number',\n\t\tvalueType: 'number',\n\t\texampleInput: '5.32'\n\t},\n\t{\n\t\tformatTag: 'mult0',\n\t\tformatCode: '#,##0\"x\"',\n\t\tformatCategory: 'number',\n\t\tvalueType: 'number',\n\t\texampleInput: '5.32'\n\t},\n\t{\n\t\tformatTag: 'mult1',\n\t\tformatCode: '#,##0.0\"x\"',\n\t\tformatCategory: 'number',\n\t\tvalueType: 'number',\n\t\texampleInput: '5.32'\n\t},\n\t{\n\t\tformatTag: 'mult2',\n\t\tformatCode: '#,##0.00\"x\"',\n\t\tformatCategory: 'number',\n\t\tvalueType: 'number',\n\t\texampleInput: '5.32'\n\t},\n\t{\n\t\tformatTag: 'sci',\n\t\tformatCode: '0.00E+0',\n\t\tformatCategory: 'number',\n\t\tvalueType: 'number',\n\t\texampleInput: '16546.1561'\n\t},\n\n\t// Percent:\n\t{\n\t\tformatTag: 'pct',\n\t\tformatCode: AUTO_FORMAT_CODE,\n\t\tformatCategory: 'percent',\n\t\tvalueType: 'number',\n\t\texampleInput: 0.731,\n\t\ttitleTagReplacement: '',\n\t\t_autoFormat: {\n\t\t\tautoFormatFunction: (typedValue, columnFormat, columnUnitSummary) => {\n\t\t\t\tif ('number' === columnUnitSummary?.unitType) {\n\t\t\t\t\tlet adjustedColumnUnitSummary = {\n\t\t\t\t\t\tmin: columnUnitSummary.min * 100,\n\t\t\t\t\t\tmax: columnUnitSummary.max * 100,\n\t\t\t\t\t\tmedian: columnUnitSummary.median * 100,\n\t\t\t\t\t\tmaxDecimals: Math.max(columnUnitSummary.maxDecimals - 2, 0),\n\t\t\t\t\t\tunitType: columnUnitSummary.unitType\n\t\t\t\t\t};\n\t\t\t\t\tlet format = generateImplicitNumberFormat(adjustedColumnUnitSummary);\n\t\t\t\t\treturn ssf.format(format._autoFormat.autoFormatCode, typedValue * 100) + '%';\n\t\t\t\t} else {\n\t\t\t\t\treturn ssf.format('#,##0%', typedValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t{\n\t\tformatTag: 'pct0',\n\t\tformatCode: '#,##0%',\n\t\tformatCategory: 'percent',\n\t\tvalueType: 'number',\n\t\texampleInput: 0.731,\n\t\ttitleTagReplacement: ''\n\t},\n\t{\n\t\tformatTag: 'pct1',\n\t\tformatCode: '#,##0.0%',\n\t\tformatCategory: 'percent',\n\t\tvalueType: 'number',\n\t\texampleInput: 0.731,\n\t\ttitleTagReplacement: ''\n\t},\n\t{\n\t\tformatTag: 'pct2',\n\t\tformatCode: '#,##0.00%',\n\t\tformatCategory: 'percent',\n\t\tvalueType: 'number',\n\t\texampleInput: 0.731,\n\t\ttitleTagReplacement: ''\n\t},\n\t{\n\t\tformatTag: 'pct3',\n\t\tformatCode: '#,##0.000%',\n\t\tformatCategory: 'percent',\n\t\tvalueType: 'number',\n\t\texampleInput: 0.731,\n\t\ttitleTagReplacement: ''\n\t}\n];\n", "// note prettier is ignored here via .prettierignore\nimport { TidyFn, TidyGroupExportFn } from './types';\n\n// pipe types not well supported: https://github.com/microsoft/TypeScript/issues/29904\n// so manually make types overloaded for up to 10 steps\n\n/**\n * Forms a tidy pipeline that can be called with (items)\n * @param items array of items to manipulate\n * @param fns Tidy functions\n */\nexport function tidy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object>(items: T[], f1: TidyFn<T, T1>, f2: TidyFn<T1, T2>, f3: TidyFn<T2, T3>, f4: TidyFn<T3, T4>, f5: TidyFn<T4, T5>, f6: TidyFn<T5, T6>, f7: TidyFn<T6, T7>, f8: TidyFn<T7, T8>, f9: TidyFn<T8, T9>, f10: TidyFn<T9, T10>): T10[];\nexport function tidy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object, T10 extends object>(items: T[], f1: TidyFn<T, T1>, f2: TidyFn<T1, T2>, f3: TidyFn<T2, T3>, f4: TidyFn<T3, T4>, f5: TidyFn<T4, T5>, f6: TidyFn<T5, T6>, f7: TidyFn<T6, T7>, f8: TidyFn<T7, T8>, f9: TidyFn<T8, T9>, f10: TidyGroupExportFn<T9, T10>): T10;\nexport function tidy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object>(items: T[], f1: TidyFn<T, T1>, f2: TidyFn<T1, T2>, f3: TidyFn<T2, T3>, f4: TidyFn<T3, T4>, f5: TidyFn<T4, T5>, f6: TidyFn<T5, T6>, f7: TidyFn<T6, T7>, f8: TidyFn<T7, T8>, f9: TidyFn<T8, T9>): T9[];\nexport function tidy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object, T9 extends object>(items: T[], f1: TidyFn<T, T1>, f2: TidyFn<T1, T2>, f3: TidyFn<T2, T3>, f4: TidyFn<T3, T4>, f5: TidyFn<T4, T5>, f6: TidyFn<T5, T6>, f7: TidyFn<T6, T7>, f8: TidyFn<T7, T8>, f9: TidyGroupExportFn<T8, T9>): T9;\nexport function tidy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object>(items: T[], f1: TidyFn<T, T1>, f2: TidyFn<T1, T2>, f3: TidyFn<T2, T3>, f4: TidyFn<T3, T4>, f5: TidyFn<T4, T5>, f6: TidyFn<T5, T6>, f7: TidyFn<T6, T7>, f8: TidyFn<T7, T8>): T8[];\nexport function tidy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, T8 extends object>(items: T[], f1: TidyFn<T, T1>, f2: TidyFn<T1, T2>, f3: TidyFn<T2, T3>, f4: TidyFn<T3, T4>, f5: TidyFn<T4, T5>, f6: TidyFn<T5, T6>, f7: TidyFn<T6, T7>, f8: TidyGroupExportFn<T7, T8>): T8;\nexport function tidy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object>(items: T[], f1: TidyFn<T, T1>, f2: TidyFn<T1, T2>, f3: TidyFn<T2, T3>, f4: TidyFn<T3, T4>, f5: TidyFn<T4, T5>, f6: TidyFn<T5, T6>, f7: TidyFn<T6, T7>): T7[];\nexport function tidy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object>(items: T[], f1: TidyFn<T, T1>, f2: TidyFn<T1, T2>, f3: TidyFn<T2, T3>, f4: TidyFn<T3, T4>, f5: TidyFn<T4, T5>, f6: TidyFn<T5, T6>, f7: TidyGroupExportFn<T6, T7>): T7;\nexport function tidy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object>(items: T[], f1: TidyFn<T, T1>, f2: TidyFn<T1, T2>, f3: TidyFn<T2, T3>, f4: TidyFn<T3, T4>, f5: TidyFn<T4, T5>, f6: TidyFn<T5, T6>): T6[];\nexport function tidy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object>(items: T[], f1: TidyFn<T, T1>, f2: TidyFn<T1, T2>, f3: TidyFn<T2, T3>, f4: TidyFn<T3, T4>, f5: TidyFn<T4, T5>, f6: TidyGroupExportFn<T5, T6>): T6;\nexport function tidy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object>(items: T[], f1: TidyFn<T, T1>, f2: TidyFn<T1, T2>, f3: TidyFn<T2, T3>, f4: TidyFn<T3, T4>, f5: TidyFn<T4, T5> ): T5[];\nexport function tidy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object>(items: T[], f1: TidyFn<T, T1>, f2: TidyFn<T1, T2>, f3: TidyFn<T2, T3>, f4: TidyFn<T3, T4>, f5: TidyGroupExportFn<T4, T5> ): T5;\nexport function tidy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object>(items: T[], f1: TidyFn<T, T1>, f2: TidyFn<T1, T2>, f3: TidyFn<T2, T3>, f4: TidyFn<T3, T4>): T4[];\nexport function tidy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object>(items: T[], f1: TidyFn<T, T1>, f2: TidyFn<T1, T2>, f3: TidyFn<T2, T3>, f4: TidyGroupExportFn<T3, T4>): T4;\nexport function tidy<T extends object, T1 extends object, T2 extends object, T3 extends object>(items: T[], f1: TidyFn<T, T1>, f2: TidyFn<T1, T2>, f3: TidyFn<T2, T3>): T3[];\nexport function tidy<T extends object, T1 extends object, T2 extends object, T3 extends object>(items: T[], f1: TidyFn<T, T1>, f2: TidyFn<T1, T2>, f3: TidyGroupExportFn<T2, T3>): T3;\nexport function tidy<T extends object, T1 extends object, T2 extends object>(items: T[], f1: TidyFn<T, T1>, f2: TidyFn<T1, T2>): T2[];\nexport function tidy<T extends object, T1 extends object, T2 extends object>(items: T[], f1: TidyFn<T, T1>, f2: TidyGroupExportFn<T1, T2>): T2;\nexport function tidy<T extends object, T1 extends object>(items: T[], f1: TidyFn<T, T1>): T1[];\nexport function tidy<T extends object, T1 extends object>(items: T[], f1: TidyGroupExportFn<T, T1>): T1;\nexport function tidy<InputT extends object>(\n  items: InputT[],\n  ...fns: (TidyFn<any, any> | TidyGroupExportFn<any, any>)[]\n): any {\n  if (typeof items === 'function') {\n    throw new Error('You must supply the data as the first argument to tidy()');\n  }\n\n  let result: any = items;\n  for (const fn of fns) {\n    if (fn) {\n      // skip falsy values\n      result = fn(result);\n    }\n  }\n\n  return result;\n}\n", "export type SingleOrArray<T> = T | T[];\n\n/**\n * Given an arg that may or may not be an array, make it an array if it isn't one.\n */\nexport function singleOrArray<T>(d: SingleOrArray<T> | null | undefined): T[] {\n  return d == null ? [] : Array.isArray(d) ? d : [d];\n}\n", "export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n", "import ascending from \"./ascending.js\";\n\nexport default function(f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n", "export default function(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n", "import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n", "// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n", "export class InternMap extends Map {\n  constructor(entries, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (entries != null) for (const [key, value] of entries) this.set(key, value);\n  }\n  get(key) {\n    return super.get(intern_get(this, key));\n  }\n  has(key) {\n    return super.has(intern_get(this, key));\n  }\n  set(key, value) {\n    return super.set(intern_set(this, key), value);\n  }\n  delete(key) {\n    return super.delete(intern_delete(this, key));\n  }\n}\n\nexport class InternSet extends Set {\n  constructor(values, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (values != null) for (const value of values) this.add(value);\n  }\n  has(value) {\n    return super.has(intern_get(this, value));\n  }\n  add(value) {\n    return super.add(intern_set(this, value));\n  }\n  delete(value) {\n    return super.delete(intern_delete(this, value));\n  }\n}\n\nfunction intern_get({_intern, _key}, value) {\n  const key = _key(value);\n  return _intern.has(key) ? _intern.get(key) : value;\n}\n\nfunction intern_set({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) return _intern.get(key);\n  _intern.set(key, value);\n  return value;\n}\n\nfunction intern_delete({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) {\n    value = _intern.get(value);\n    _intern.delete(key);\n  }\n  return value;\n}\n\nfunction keyof(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n", "export default function(x) {\n  return x;\n}\n", "import {InternMap} from \"internmap\";\nimport identity from \"./identity.js\";\n\nexport default function group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\n\nexport function groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\n\nexport function rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\n\nexport function rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nexport function index(values, ...keys) {\n  return nest(values, identity, unique, keys);\n}\n\nexport function indexes(values, ...keys) {\n  return nest(values, Array.from, unique, keys);\n}\n\nfunction unique(values) {\n  if (values.length !== 1) throw new Error(\"duplicate key\");\n  return values[0];\n}\n\nfunction nest(values, map, reduce, keys) {\n  return (function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new InternMap();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);\n      else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  })(values, 0);\n}\n", "var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n", "var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n", "export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n", "export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n", "import ascending from \"./ascending.js\";\n\n// Based on https://github.com/mourner/quickselect\n// ISC license, Copyright 2018 Vladimir Agafonkin.\nexport default function quickselect(array, k, left = 0, right = array.length - 1, compare = ascending) {\n  while (right > left) {\n    if (right - left > 600) {\n      const n = right - left + 1;\n      const m = k - left + 1;\n      const z = Math.log(n);\n      const s = 0.5 * Math.exp(2 * z / 3);\n      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n      quickselect(array, k, newLeft, newRight, compare);\n    }\n\n    const t = array[k];\n    let i = left;\n    let j = right;\n\n    swap(array, left, k);\n    if (compare(array[right], t) > 0) swap(array, left, right);\n\n    while (i < j) {\n      swap(array, i, j), ++i, --j;\n      while (compare(array[i], t) < 0) ++i;\n      while (compare(array[j], t) > 0) --j;\n    }\n\n    if (compare(array[left], t) === 0) swap(array, left, j);\n    else ++j, swap(array, j, right);\n\n    if (j <= k) left = j + 1;\n    if (k <= j) right = j - 1;\n  }\n  return array;\n}\n\nfunction swap(array, i, j) {\n  const t = array[i];\n  array[i] = array[j];\n  array[j] = t;\n}\n", "import max from \"./max.js\";\nimport min from \"./min.js\";\nimport quickselect from \"./quickselect.js\";\nimport number, {numbers} from \"./number.js\";\n\nexport default function quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n", "import quantile from \"./quantile.js\";\n\nexport default function(values, valueof) {\n  return quantile(values, 0.5, valueof);\n}\n", "export default shuffler(Math.random);\n\nexport function shuffler(random) {\n  return function shuffle(array, i0 = 0, i1 = array.length) {\n    let m = i1 - (i0 = +i0);\n    while (m) {\n      const i = random() * m-- | 0, t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n    return array;\n  };\n}\n", "import { A } from 'ts-toolbelt';\nimport { singleOrArray } from './helpers/singleOrArray';\nimport { Key, TidyFn, Vector } from './types';\n\nexport type SummarizeSpec<T> = Record<Key, (items: T[]) => any>;\n\nexport interface SummarizeOptions<T = any> {\n  rest?: (key: keyof T) => (items: T[]) => any;\n}\n\ntype SummarizedT<\n  T extends object,\n  SumSpec extends SummarizeSpec<T>,\n  Options extends SummarizeOptions<T> | undefined\n> = {\n  // summarized values map to return type of the spec functions\n  [K in keyof SumSpec]: ReturnType<SumSpec[K]>;\n} & // if there is a 'rest' option, add in the other values from T\n  (NonNullable<Options>['rest'] extends Function\n    ? Exclude<T, keyof SumSpec>\n    : void);\n\n/**\n * summarizes items\n */\nexport function summarize<\n  T extends object,\n  SummarizedSpec extends SummarizeSpec<T> = SummarizeSpec<T>,\n  Options extends SummarizeOptions<T> = SummarizeOptions<T>\n>(\n  summarizeSpec: SummarizedSpec,\n  options?: Options\n): TidyFn<T, A.Compute<SummarizedT<T, SummarizedSpec, Options>>> {\n  type Output = SummarizedT<T, SummarizedSpec, Options>;\n\n  const _summarize: TidyFn<T, A.Compute<Output>> = (\n    items: T[]\n  ): A.Compute<Output>[] => {\n    options = options ?? ({} as Options);\n\n    // reduce but use a loop to be more readable\n    const summarized = {} as Output;\n    const keys = Object.keys(summarizeSpec) as (keyof SummarizedSpec)[];\n\n    for (const key of keys) {\n      summarized[key as keyof Output] = summarizeSpec[key](items);\n    }\n\n    // if we a function to apply to the rest of the keys is supplied, use it\n    // TODO: improve types for rest\n    if (options.rest && items.length) {\n      const objectKeys = Object.keys(items[0]) as (keyof T)[];\n      for (const objKey of objectKeys) {\n        if (keys.includes(objKey as any)) {\n          continue;\n        }\n\n        (summarized as any)[objKey] = options.rest(objKey)(items);\n      }\n    }\n\n    return [summarized] as A.Compute<Output>[];\n  };\n\n  return _summarize;\n}\n\n/*-------- summarize helpers ----------------------------------------*/\n\nexport type SummaryKeyFn<T, K = keyof T> = (key: K) => (items: T[]) => any;\n\nfunction _summarizeHelper<\n  T extends object,\n  SummarizedT extends object = { [K in keyof T]: any }\n>(\n  items: T[],\n  summaryFn: SummaryKeyFn<T>,\n  predicateFn?: (vector: Vector<T>) => boolean,\n  keys?: Array<keyof T | ((items: T[]) => (keyof T)[])>\n): SummarizedT[] {\n  if (!items.length) return [];\n\n  // reduce but use a loop to be more readable\n  const summarized = {} as SummarizedT;\n\n  // read in keys from first object if not provided\n  let keysArr: (keyof T)[];\n  if (keys == null) {\n    keysArr = Object.keys(items[0]) as (keyof T)[];\n  } else {\n    // expand them all to a flat list of keys\n    keysArr = [];\n    for (const keyInput of singleOrArray(keys as any)) {\n      if (typeof keyInput === 'function') {\n        keysArr.push(...(keyInput(items) as (keyof T)[]));\n      } else {\n        keysArr.push(keyInput);\n      }\n    }\n  }\n\n  for (const key of keysArr) {\n    if (predicateFn) {\n      // inefficient to compute this vector here, wonder if it should\n      // be computed prior to this func being called somehow? (TODO)\n      const vector = items.map((d) => d[key]);\n      if (!predicateFn(vector)) {\n        continue;\n      }\n    }\n    summarized[(key as unknown) as keyof SummarizedT] = summaryFn(key)(\n      items\n    ) as any;\n  }\n\n  return [summarized];\n}\n\n/*---- summarizeAll() --------------------------------------------*/\n\ntype SummaryFnOutput<T extends object, F extends SummaryKeyFn<T>> = ReturnType<\n  ReturnType<F>\n>;\n\nexport function summarizeAll<T extends object, F extends SummaryKeyFn<T>>(\n  summaryFn: F\n): TidyFn<T, A.Compute<Record<keyof T, SummaryFnOutput<T, F>>>> {\n  const _summarizeAll: TidyFn<\n    T,\n    A.Compute<Record<keyof T, SummaryFnOutput<T, F>>>\n  > = (items: T[]): A.Compute<Record<keyof T, SummaryFnOutput<T, F>>>[] =>\n    _summarizeHelper(items, summaryFn);\n\n  return _summarizeAll;\n}\n\n/*---- summarizeIf() --------------------------------------------*/\n// type is not perfect since it returns all keys of T, but better to have more than less I figure\nexport function summarizeIf<T extends object, F extends SummaryKeyFn<T>>(\n  predicateFn: (vector: Vector<T>) => boolean,\n  summaryFn: F\n): TidyFn<T, A.Compute<Record<keyof T, SummaryFnOutput<T, F>>>> {\n  const _summarizeIf: TidyFn<\n    T,\n    A.Compute<Record<keyof T, SummaryFnOutput<T, F>>>\n  > = (items: T[]): A.Compute<Record<keyof T, SummaryFnOutput<T, F>>>[] =>\n    _summarizeHelper(items, summaryFn, predicateFn);\n\n  return _summarizeIf;\n}\n\n/*---- summarizeAt() --------------------------------------------*/\nexport function summarizeAt<\n  T extends object,\n  Keys extends (keyof T)[],\n  F extends SummaryKeyFn<T, Keys[number]>\n>(\n  keys: Keys,\n  summaryFn: F\n): TidyFn<T, A.Compute<Record<Keys[number], SummaryFnOutput<T, F>>>> {\n  const _summarizeAt: TidyFn<\n    T,\n    A.Compute<Record<Keys[number], SummaryFnOutput<T, F>>>\n  > = (items: T[]): A.Compute<Record<Keys[number], SummaryFnOutput<T, F>>>[] =>\n    _summarizeHelper(items, summaryFn, undefined, keys);\n\n  return _summarizeAt;\n}\n", "import { TidyFn, NonFunctionValue, Key } from './types';\nimport { A, O } from 'ts-toolbelt';\n\ntype MutateSpecValue<T, O = any> =\n  | ((item: T, index: number, array: Iterable<T>) => O)\n  | NonFunctionValue;\nexport type MutateSpec<T> = Record<Key, MutateSpecValue<T>>;\nexport type ResolvedObj<Obj extends Record<Key, MutateSpecValue<any>>> = {\n  [K in keyof Obj]: Obj[K] extends (...args: any) => any\n    ? ReturnType<Obj[K]> extends any[]\n      ? ReturnType<Obj[K]>[number]\n      : ReturnType<Obj[K]>\n    : Obj[K];\n};\n\ntype Mutated<T extends object, MSpec extends MutateSpec<T>> = O.Merge<\n  ResolvedObj<MSpec>,\n  T\n>;\n\ntype Compute<T> = A.Compute<T>;\n\n/**\n * Mutates items, one item at a time. For mutating across multiple items,\n * use mutateWithSummary.\n * @param mutateSpec\n */\nexport function mutate<T extends object, MSpec extends MutateSpec<T>>(\n  mutateSpec: MSpec\n): TidyFn<T, Compute<Mutated<T, MSpec>>> {\n  type MutatedT = Mutated<T, MSpec>;\n  // use Compute for better intellisense (reveals all keys in obj)\n  const _mutate: TidyFn<T, Compute<MutatedT>> = (\n    items: T[]\n  ): Compute<MutatedT>[] => {\n    // create the base items to merge mutated values into\n    // note we start with the original array so when we pass it as the third argument\n    // to a mutate function, you get the values that have been changed so far\n    const mutatedItems: MutatedT[] = items.map((d) => ({ ...d })) as MutatedT[];\n\n    // we can update each item completely one at a time, since mutate doesn't\n    // support looking across items. Use mutateWithSummary for that.\n    let i = 0;\n    for (const mutatedItem of mutatedItems) {\n      for (const key in mutateSpec) {\n        // get the mutated value for this item (either run the fn or use the constant)\n        const mutateSpecValue = mutateSpec[key];\n        const mutatedResult =\n          typeof mutateSpecValue === 'function'\n            ? mutateSpecValue(mutatedItem as T, i, mutatedItems as T[])\n            : mutateSpecValue;\n\n        mutatedItem[key as any] = mutatedResult;\n      }\n\n      ++i;\n    }\n\n    return mutatedItems as Compute<MutatedT>[];\n  };\n\n  return _mutate;\n}\n", "import { GroupKey } from '../types';\n\n/**\n * Given an object and a set of group keys [[keyName, keyValue], ...]\n * set the keys as properties within the object: { [keyName]: keyValue, ... }\n * (creates a new object with these properties added)\n */\nexport function assignGroupKeys<T extends object>(d: T, keys: GroupKey[]) {\n  // abort if atypical input\n  if (d == null || typeof d !== 'object' || Array.isArray(d)) return d;\n\n  // transform to { groupKey1: value, ... } excluding function group keys\n  const keysObj = Object.fromEntries(\n    keys.filter((key) => typeof key[0] !== 'function' && key[0] != null)\n  );\n\n  return Object.assign(keysObj, d);\n}\n", "import { Grouped, Datum } from '../types';\n\n/**\n * Traverse the leaves of the grouped items and and run the\n * groupFn on them. Basically an in-order traversal. Can you\n * believe this is real and not part of a coding interview??\n */\nexport function groupTraversal<\n  T extends object,\n  T2 extends Datum = T,\n  OutputType = Grouped<T2>\n>(\n  grouped: Grouped<T>,\n  outputGrouped: OutputType,\n  keys: any[],\n  addSubgroup: (root: OutputType, keys: any[], level: number) => OutputType,\n  addLeaves: (root: OutputType, keys: any[], items: T[], level: number) => void,\n  level: number = 0\n) {\n  for (const [key, value] of grouped.entries()) {\n    const keysHere = [...keys, key];\n\n    // internal node\n    if (value instanceof Map) {\n      const subgroup = addSubgroup(outputGrouped, keysHere, level);\n\n      // recurse\n      groupTraversal(\n        value,\n        subgroup,\n        keysHere,\n        addSubgroup,\n        addLeaves,\n        level + 1\n      );\n    } else {\n      // leaf\n      addLeaves(outputGrouped, keysHere, value, level);\n    }\n  }\n\n  return outputGrouped;\n}\n", "import { Grouped } from '../types';\nimport { groupTraversal } from './groupTraversal';\n\nexport function groupMap<T extends object, OutputT extends object = T>(\n  grouped: Grouped<T>,\n  groupFn: (items: T[], keys: any[]) => OutputT[],\n  keyFn: (keys: any[]) => any = (keys) =>\n    keys[\n      keys.length - 1\n    ] /* optional func to transform key based on all keys in map so far */\n): Grouped<OutputT> {\n  function addSubgroup(parentGrouped: Grouped<OutputT>, keys: any[]) {\n    const subgroup = new Map();\n    parentGrouped.set(keyFn(keys), subgroup);\n    return subgroup;\n  }\n\n  function addLeaves(\n    parentGrouped: Grouped<OutputT>,\n    keys: any[],\n    values: T[]\n  ) {\n    parentGrouped.set(keyFn(keys), groupFn(values, keys));\n  }\n\n  const outputGrouped: Grouped<OutputT> = new Map();\n\n  groupTraversal(grouped, outputGrouped, [], addSubgroup, addLeaves);\n\n  return outputGrouped;\n}\n", "export const identity = <T>(d: T): T => d;\n", "/**\n * Returns true if input is an object\n */\nexport function isObject(obj: any) {\n  const type = typeof obj;\n  return obj != null && (type === 'object' || type === 'function');\n}\n", "import { group } from 'd3-array';\nimport { A, O } from 'ts-toolbelt';\nimport { assignGroupKeys } from './helpers/assignGroupKeys';\nimport { groupMap } from './helpers/groupMap';\nimport { groupTraversal } from './helpers/groupTraversal';\nimport { identity } from './helpers/identity';\nimport { isObject } from './helpers/isObject';\nimport { SingleOrArray, singleOrArray } from './helpers/singleOrArray';\nimport { Grouped, GroupKey, TidyGroupExportFn, Key, TidyFn } from './types';\n\n/** [key, values] where values could be more nested entries */\ntype EntriesOutput = [any, any][];\ntype EntriesObjectOutput = { key: Key; values: any }[];\n\n/** nested objects: { [key]: values } */\ntype ObjectOutput = Record<Key, any>;\n\n/** nested keys: e.g. [key, key, key, [key, key, [key]]] */\ntype KeysOutput = any[];\n\n/** nested values: e.g. [[value1_1, value1_2], [value2_1, value2_2]] */\ntype ValuesOutput = any[];\n\nexport type LevelSpec = {\n  id?: string;\n  createEmptySubgroup: () => any;\n  addSubgroup: (\n    parentGrouped: any,\n    newSubgroup: any,\n    key: any,\n    level: number\n  ) => void;\n  addLeaf: (parentGrouped: any, key: any, values: any[], level: number) => void;\n};\n\n/**\n * Options to affect export type\n */\ninterface GroupByOptions {\n  /** whether to merge group keys back into the objects */\n  readonly addGroupKeys?: boolean;\n\n  // -- export related -- //\n  /** export method */\n  readonly export?:\n    | 'grouped'\n    | 'entries'\n    | 'entries-object'\n    | 'object'\n    | 'map'\n    | 'keys'\n    | 'values'\n    | 'levels'\n    | 'ungrouped';\n  /** if all nested levels should be brought to a single top level */\n  readonly flat?: boolean;\n  /** when flat is true, how to flatten nested keys */\n  readonly compositeKey?: (keys: any[]) => string;\n  /** whether the leaf sets consist of just one item (typical after summarize).\n   *  if true, uses the first element in the leaf set instead of an array\n   */\n  readonly single?: boolean;\n  /** operation called on each leaf during export to map it to a different value\n   *  (default: identity)\n   */\n  readonly mapLeaf?: (value: any) => any;\n  /** operation called on each leaf set to map the array of values to a different value.\n   * Similar to `rollup` from d3-collection nest or d3-array\n   * (default: identity)\n   */\n  readonly mapLeaves?: (values: any[]) => any;\n  /** [entries only] operation called on entries to map from [key, values] to\n   * whatever the output of this is (e.g. `{ key, values }`)\n   * (default: identity)\n   */\n  readonly mapEntry?: (entry: [any, any], level: number) => any;\n\n  /** [required for levels] specifies the export operation for each level of the grouping */\n  readonly levels?: (\n    | 'entries'\n    | 'entries-object'\n    | 'object'\n    | 'map'\n    | 'keys'\n    | 'values'\n    | LevelSpec\n  )[];\n}\n\n// aliases to make overloads shorter\ntype GK<T extends object> = SingleOrArray<keyof T | ((d: T) => any)>;\ntype F<I extends object, O extends object> = TidyFn<I, O>;\n\n// merge back in group keys to output types\ntype MergeGroupKeys<\n  T extends object,\n  Out extends object,\n  Keys extends GK<T>\n> = Keys extends keyof T\n  ? O.Merge<Pick<T, Keys>, Out>\n  : Keys extends (keyof T)[]\n  ? O.Merge<Pick<T, Keys[number]>, Out>\n  : Out;\n\n// do not merge in group keys if explicitly said not to\ntype WithGroupKeys<\n  T extends object,\n  Out extends object,\n  Keys extends GK<T>,\n  Opts extends GroupByOptions\n> = NonNullable<Opts>['addGroupKeys'] extends false\n  ? Out\n  : MergeGroupKeys<T, Out, Keys>;\n\n/**\n * output varies based on export options\n */\ntype GroupByOutput<\n  T extends object,\n  O extends object,\n  Keys extends GK<T>,\n  Opts extends GroupByOptions\n> = A.Compute<\n  NonNullable<Opts>['export'] extends 'grouped'\n    ? Grouped<WithGroupKeys<T, O, Keys, Opts>>\n    : NonNullable<Opts>['export'] extends 'entries'\n    ? EntriesOutput\n    : NonNullable<Opts>['export'] extends 'entries-object'\n    ? EntriesObjectOutput\n    : NonNullable<Opts>['export'] extends 'object'\n    ? ObjectOutput\n    : NonNullable<Opts>['export'] extends 'map'\n    ? Map<any, any>\n    : NonNullable<Opts>['export'] extends 'keys'\n    ? KeysOutput\n    : NonNullable<Opts>['export'] extends 'values'\n    ? ValuesOutput\n    : NonNullable<Opts>['export'] extends 'levels'\n    ? any\n    : WithGroupKeys<T, O, Keys, Opts>[]\n>;\n\ntype GroupByFn<\n  T extends object,\n  O extends object,\n  Keys extends GK<T>,\n  Opts extends GroupByOptions\n> = Opts['export'] extends\n  | 'grouped'\n  | 'entries'\n  | 'entries-object'\n  | 'object'\n  | 'map'\n  | 'keys'\n  | 'values'\n  | 'levels'\n  ? TidyGroupExportFn<T, GroupByOutput<T, O, Keys, Opts>>\n  : // default is no export, ungrouped and back in simple form\n    TidyFn<T, WithGroupKeys<T, O, Keys, Opts>>;\n\n/**\n * Nests the data by the specified groupings\n */\n// prettier-ignore\nexport function groupBy<T extends object, T1 extends object, Keys extends GK<T>, Opts extends GroupByOptions>(groupKeys: Keys, fns: F<T, T1>, options: Opts): GroupByFn<T, T1, Keys, Opts>;\n// prettier-ignore\nexport function groupBy<T extends object, T1 extends object, Keys extends GK<T>>(groupKeys: Keys, fns: F<T, T1>): GroupByFn<T, T1, Keys, GroupByOptions>;\n// prettier-ignore\nexport function groupBy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, Keys extends GK<T>, Opts extends GroupByOptions>(groupKeys: Keys, fns: [F<T, T1>, F<T1, T2>, F<T2, T3>, F<T3, T4>, F<T4, T5>, F<T5, T6>, F<T6, T7>], options: Opts): GroupByFn<T, T7, Keys, Opts>;\n// prettier-ignore\nexport function groupBy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, T7 extends object, Keys extends GK<T>>(groupKeys: Keys, fns: [F<T, T1>, F<T1, T2>, F<T2, T3>, F<T3, T4>, F<T4, T5>, F<T5, T6>, F<T6, T7>]): GroupByFn<T, T7, Keys, GroupByOptions>;\n// prettier-ignore\nexport function groupBy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, Keys extends GK<T>, Opts extends GroupByOptions>(groupKeys: Keys, fns: [F<T, T1>, F<T1, T2>, F<T2, T3>, F<T3, T4>, F<T4, T5>, F<T5, T6>], options: Opts): GroupByFn<T, T6, Keys, Opts>;\n// prettier-ignore\nexport function groupBy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, T6 extends object, Keys extends GK<T>>(groupKeys: Keys, fns: [F<T, T1>, F<T1, T2>, F<T2, T3>, F<T3, T4>, F<T4, T5>, F<T5, T6>]): GroupByFn<T, T6, Keys, GroupByOptions>;\n// prettier-ignore\nexport function groupBy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, Keys extends GK<T>, Opts extends GroupByOptions>(groupKeys: Keys, fns: [F<T, T1>, F<T1, T2>, F<T2, T3>, F<T3, T4>, F<T4, T5>], options: Opts): GroupByFn<T, T5, Keys, Opts>;\n// prettier-ignore\nexport function groupBy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, T5 extends object, Keys extends GK<T>>(groupKeys: Keys, fns: [F<T, T1>, F<T1, T2>, F<T2, T3>, F<T3, T4>, F<T4, T5>]): GroupByFn<T, T5, Keys, GroupByOptions>;\n// prettier-ignore\nexport function groupBy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, Keys extends GK<T>, Opts extends GroupByOptions>(groupKeys: Keys, fns: [F<T, T1>, F<T1, T2>, F<T2, T3>, F<T3, T4>], options: Opts): GroupByFn<T, T4, Keys, Opts>;\n// prettier-ignore\nexport function groupBy<T extends object, T1 extends object, T2 extends object, T3 extends object, T4 extends object, Keys extends GK<T>>(groupKeys: Keys, fns: [F<T, T1>, F<T1, T2>, F<T2, T3>, F<T3, T4>]): GroupByFn<T, T4, Keys, GroupByOptions>;\n// prettier-ignore\nexport function groupBy<T extends object, T1 extends object, T2 extends object, T3 extends object, Keys extends GK<T>, Opts extends GroupByOptions>(groupKeys: Keys, fns: [F<T, T1>, F<T1, T2>, F<T2, T3>], options: Opts): GroupByFn<T, T3, Keys, Opts>;\n// prettier-ignore\nexport function groupBy<T extends object, T1 extends object, T2 extends object, T3 extends object, Keys extends GK<T>>(groupKeys: Keys, fns: [F<T, T1>, F<T1, T2>, F<T2, T3>]): GroupByFn<T, T3, Keys, GroupByOptions>;\n// prettier-ignore\nexport function groupBy<T extends object, T1 extends object, T2 extends object, Keys extends GK<T>, Opts extends GroupByOptions>(groupKeys: Keys, fns: [F<T, T1>, F<T1, T2>], options: Opts): GroupByFn<T, T2, Keys, Opts>;\n// prettier-ignore\nexport function groupBy<T extends object, T1 extends object, T2 extends object, Keys extends GK<T>>(groupKeys: Keys, fns: [F<T, T1>, F<T1, T2>]): GroupByFn<T, T2, Keys, GroupByOptions>;\n// prettier-ignore\nexport function groupBy<T extends object, T1 extends object, Keys extends GK<T>, Opts extends GroupByOptions>(groupKeys: Keys, fns: [F<T, T1>], options: Opts): GroupByFn<T, T1, Keys, Opts>;\n// prettier-ignore\nexport function groupBy<T extends object, T1 extends object, Keys extends GK<T>>(groupKeys: Keys, fns: [F<T, T1>]): GroupByFn<T, T1, Keys, GroupByOptions>;\n// prettier-ignore\nexport function groupBy<T extends object, Keys extends GK<T>, Opts extends GroupByOptions>(groupKeys: Keys, fns: [], options: Opts): GroupByFn<T, T, Keys, Opts>;\n// prettier-ignore\nexport function groupBy<T extends object, Keys extends GK<T>>(groupKeys: Keys, fns: []): GroupByFn<T, T, Keys, GroupByOptions>;\n// prettier-ignore\nexport function groupBy<T extends object, Keys extends GK<T>, Opts extends GroupByOptions>(groupKeys: Keys, options: Opts): GroupByFn<T, T, Keys, Opts>;\n// prettier-ignore\nexport function groupBy<T extends object, Keys extends GK<T>>(groupKeys: Keys): GroupByFn<T, T, Keys, GroupByOptions>;\nexport function groupBy<\n  T extends object,\n  O extends object,\n  Keys extends GK<T>,\n  Opts extends GroupByOptions\n>(\n  groupKeys: Keys,\n  fns?: TidyFn<any, any>[] | TidyFn<any, any>,\n  options?: Opts\n): GroupByFn<T, O, Keys, Opts> {\n  if (typeof fns === 'function') {\n    fns = [fns];\n  } else if (arguments.length === 2 && fns != null && !Array.isArray(fns)) {\n    options = fns as any;\n  }\n\n  const _groupBy: GroupByFn<T, O, Keys, Opts> = ((items: T[]) => {\n    // form into a nested map\n    const grouped = makeGrouped(items, groupKeys);\n\n    // run group functions\n    const results = runFlow(\n      grouped,\n      fns as TidyFn<any, any>[],\n      options?.addGroupKeys\n    );\n\n    // export\n    if (options?.export) {\n      switch (options.export) {\n        case 'grouped':\n          return results;\n        case 'levels':\n          return exportLevels(results, options);\n        case 'entries-obj' as any:\n        case 'entriesObject' as any:\n          return exportLevels(results, {\n            ...options,\n            export: 'levels',\n            levels: ['entries-object'],\n          });\n        default:\n          return exportLevels(results, {\n            ...options,\n            export: 'levels',\n            levels: [options.export],\n          });\n      }\n    }\n\n    // export === 'ungrouped' or nully:\n    const ungrouped = ungroup(results, options?.addGroupKeys);\n    return ungrouped as any;\n  }) as GroupByFn<T, O, Keys, Opts>;\n  // (_groupBy as any).tidyType = 'group-export';\n\n  return _groupBy;\n}\n// convenient export option configs\ngroupBy.grouped = (options?: Omit<GroupByOptions, 'export' | 'levels'>) =>\n  ({ ...options, export: 'grouped' } as const);\ngroupBy.entries = (options?: Omit<GroupByOptions, 'export' | 'levels'>) =>\n  ({ ...options, export: 'entries' } as const);\ngroupBy.entriesObject = (options?: Omit<GroupByOptions, 'export' | 'levels'>) =>\n  ({ ...options, export: 'entries-object' } as const);\ngroupBy.object = (options?: Omit<GroupByOptions, 'export' | 'levels'>) =>\n  ({ ...options, export: 'object' } as const);\ngroupBy.map = (options?: Omit<GroupByOptions, 'export' | 'levels'>) =>\n  ({ ...options, export: 'map' } as const);\ngroupBy.keys = (options?: Omit<GroupByOptions, 'export' | 'levels'>) =>\n  ({ ...options, export: 'keys' } as const);\ngroupBy.values = (options?: Omit<GroupByOptions, 'export' | 'levels'>) =>\n  ({ ...options, export: 'values' } as const);\ngroupBy.levels = (options?: Omit<GroupByOptions, 'export'>) =>\n  ({ ...options, export: 'levels' } as const);\n\nfunction runFlow<T extends object>(\n  items: Grouped<T>,\n  fns?: TidyFn<any, any>[],\n  addGroupKeys?: boolean\n) {\n  let result: any = items;\n  if (!fns?.length) return result;\n\n  for (const fn of fns) {\n    if (!fn) continue;\n\n    // otherwise break it up and call it on each leaf set\n    result = groupMap(result, (items, keys) => {\n      // ensure we kept the group keys in the object\n      // (necessary for e.g. summarize which may remove them)\n      const context = { groupKeys: keys };\n      let leafItemsMapped = fn(items, context);\n      if (addGroupKeys !== false) {\n        leafItemsMapped = leafItemsMapped.map((item: T) =>\n          assignGroupKeys(item, keys)\n        );\n      }\n\n      return leafItemsMapped;\n    });\n  }\n\n  return result;\n}\n\nfunction makeGrouped<T extends object>(\n  items: T[],\n  groupKeys: SingleOrArray<keyof T | ((d: T) => any)>\n): Grouped<T> {\n  // convert string based keys to functions and keep the key name with the key value in a tuple\n  const groupKeyFns = singleOrArray(groupKeys).map((key, i) => {\n    const keyFn = typeof key === 'function' ? key : (d: T) => d[key];\n\n    // use a cache so we don't generate new keys for the same tuple\n    const keyCache = new Map();\n    return (d: T) => {\n      const keyValue = keyFn(d);\n\n      const keyValueOf = isObject(keyValue) ? keyValue.valueOf() : keyValue;\n      // used cache tuple if available\n      if (keyCache.has(keyValueOf)) {\n        return keyCache.get(keyValueOf) as GroupKey;\n      }\n\n      const keyWithName = [key, keyValue];\n      keyCache.set(keyValueOf, keyWithName);\n\n      return keyWithName;\n    };\n  });\n\n  const grouped = group(items, ...groupKeyFns);\n  return grouped;\n}\n\n/**\n * flattens a grouped collection back to a simple array\n */\nfunction ungroup<T extends object>(\n  grouped: Grouped<T>,\n  addGroupKeys: boolean | undefined\n): T[] {\n  // flatten the groups\n  const items: T[] = [];\n\n  groupTraversal(grouped, items, [], identity, (root, keys, values) => {\n    // ensure we have group keys on items (in case runFlow didn't run)\n    let valuesToAdd = values;\n    if (addGroupKeys !== false) {\n      valuesToAdd = values.map((d) => assignGroupKeys(d, keys));\n    }\n    root.push(...valuesToAdd);\n  });\n\n  return items;\n}\n\n// -----------------------------------------------------------------------\n// --- EXPORTS -----------------------------------------------------------\n// -----------------------------------------------------------------------\nconst defaultCompositeKey = (keys: any[]) => keys.join('/');\n\nfunction processFromGroupsOptions<T extends object>(options: GroupByOptions) {\n  const {\n    flat,\n    single,\n    mapLeaf = identity,\n    mapLeaves = identity,\n    addGroupKeys,\n  } = options;\n  let compositeKey: (keys: any[]) => string;\n  if (options.flat) {\n    compositeKey = options.compositeKey! ?? defaultCompositeKey;\n  }\n\n  const groupFn = (values: T[], keys: any[]) => {\n    return single\n      ? mapLeaf(\n          addGroupKeys === false ? values[0] : assignGroupKeys(values[0], keys)\n        )\n      : mapLeaves(\n          values.map((d) =>\n            mapLeaf(addGroupKeys === false ? d : assignGroupKeys(d, keys))\n          )\n        );\n  };\n\n  const keyFn = flat\n    ? (keys: GroupKey[]) => compositeKey(keys.map((d) => d[1]))\n    : (keys: GroupKey[]) => keys[keys.length - 1][1];\n\n  return { groupFn, keyFn };\n}\n\n// -- Levels -------------------------------------------------------------\nfunction exportLevels<T extends object>(\n  grouped: Grouped<T>,\n  options: GroupByOptions\n): any {\n  type NestedEntries<T> = Array<[any, NestedEntries<T> | T[]]>;\n  type NestedObject<T> = { [key: string]: NestedObject<T> | T[] };\n\n  const { groupFn, keyFn } = processFromGroupsOptions(options);\n  let { mapEntry = identity } = options;\n  const { levels = ['entries'] } = options;\n\n  const levelSpecs: LevelSpec[] = [];\n  for (const levelOption of levels) {\n    switch (levelOption) {\n      // entries / entries-object -----------------------------------------\n      case 'entries':\n      case 'entries-object':\n      case 'entries-obj' as any:\n      case 'entriesObject' as any: {\n        const levelMapEntry =\n          (levelOption === 'entries-object' ||\n            levelOption === ('entries-obj' as any) ||\n            levelOption === ('entriesObject' as any)) &&\n          options.mapEntry == null\n            ? ([key, values]: any) => ({ key, values })\n            : mapEntry;\n\n        levelSpecs.push({\n          id: 'entries',\n          createEmptySubgroup: () => [],\n          addSubgroup: (\n            parentGrouped: NestedEntries<T>,\n            newSubgroup: any,\n            key: any,\n            level: number\n          ) => {\n            parentGrouped.push(levelMapEntry([key, newSubgroup], level));\n          },\n\n          addLeaf: (\n            parentGrouped: NestedEntries<T>,\n            key: any,\n            values: T[],\n            level: number\n          ) => {\n            parentGrouped.push(levelMapEntry([key, values], level));\n          },\n        });\n        break;\n      }\n      // map -------------------------------------------------------------\n      case 'map':\n        levelSpecs.push({\n          id: 'map',\n          createEmptySubgroup: () => new Map(),\n          addSubgroup: (\n            parentGrouped: Map<any, any>,\n            newSubgroup: any,\n            key: any\n          ) => {\n            parentGrouped.set(key, newSubgroup);\n          },\n\n          addLeaf: (parentGrouped: Map<any, any>, key: any, values: T[]) => {\n            parentGrouped.set(key, values);\n          },\n        });\n        break;\n\n      // object ----------------------------------------------------------\n      case 'object':\n        levelSpecs.push({\n          id: 'object',\n          createEmptySubgroup: () => ({}),\n          addSubgroup: (\n            parentGrouped: NestedObject<T>,\n            newSubgroup: any,\n            key: any\n          ) => {\n            parentGrouped[key] = newSubgroup;\n          },\n\n          addLeaf: (parentGrouped: NestedObject<T>, key: any, values: T[]) => {\n            parentGrouped[key] = values;\n          },\n        });\n        break;\n\n      // keys ------------------------------------------------------------\n      case 'keys':\n        levelSpecs.push({\n          id: 'keys',\n          createEmptySubgroup: () => [],\n          addSubgroup: (parentGrouped: any, newSubgroup: any, key: any) => {\n            parentGrouped.push([key, newSubgroup]);\n          },\n\n          addLeaf: (parentGrouped: any, key: any) => {\n            parentGrouped.push(key);\n          },\n        });\n        break;\n\n      // values ----------------------------------------------------------\n      case 'values':\n        levelSpecs.push({\n          id: 'values',\n          createEmptySubgroup: () => [],\n          addSubgroup: (parentGrouped: any, newSubgroup: any) => {\n            parentGrouped.push(newSubgroup);\n          },\n\n          addLeaf: (parentGrouped: any, key: any, values: T[]) => {\n            parentGrouped.push(values);\n          },\n        });\n        break;\n\n      // custom ----------------------------------------------------------\n      default: {\n        // LevelSpec obj already\n        if (typeof levelOption === 'object') {\n          levelSpecs.push(levelOption);\n        }\n      }\n    }\n  }\n\n  // add subgroup\n  const addSubgroup = (parentGrouped: any, keys: any[], level: number): any => {\n    if (options.flat) {\n      return parentGrouped;\n    }\n\n    const levelSpec = levelSpecs[level] ?? levelSpecs[levelSpecs.length - 1];\n    const nextLevelSpec = levelSpecs[level + 1] ?? levelSpec;\n    const newSubgroup = nextLevelSpec.createEmptySubgroup();\n    levelSpec!.addSubgroup(parentGrouped, newSubgroup, keyFn(keys), level);\n    return newSubgroup;\n  };\n\n  // add leaves\n  const addLeaf = (\n    parentGrouped: any,\n    keys: any[],\n    values: T[],\n    level: number\n  ) => {\n    const levelSpec = levelSpecs[level] ?? levelSpecs[levelSpecs.length - 1];\n    levelSpec!.addLeaf(\n      parentGrouped,\n      keyFn(keys),\n      groupFn(values, keys),\n      level\n    );\n  };\n\n  const initialOutputObject = levelSpecs[0]!.createEmptySubgroup();\n  return groupTraversal(grouped, initialOutputObject, [], addSubgroup, addLeaf);\n}\n", "type NOptions<T> = {\n  predicate?: (d: T, index: number, array: Iterable<T>) => boolean;\n};\n\n/**\n * Returns a function that computes the count over an array of items\n */\nexport function n<T>(options?: NOptions<T>) {\n  if (options?.predicate) {\n    const predicate = options.predicate;\n    return (items: T[]) =>\n      items.reduce((n, d, i) => (predicate(d, i, items) ? n + 1 : n), 0);\n  }\n\n  return (items: T[]) => items.length;\n}\n", "import { fsum } from 'd3-array';\n\ntype SumOptions<T> = {\n  predicate?: (d: T, index: number, array: Iterable<T>) => boolean;\n};\n\n/**\n * Returns a function that computes the sum over an array of items\n * @param key A string key of the object or an accessor converting the object to a number\n */\nexport function sum<T extends object>(\n  key: keyof T | ((d: T, index: number, array: Iterable<T>) => number),\n  options?: SumOptions<T>\n) {\n  let keyFn =\n    typeof key === 'function' ? key : (d: T) => (d[key] as unknown) as number;\n\n  if (options?.predicate) {\n    const originalKeyFn = keyFn;\n    const predicate = options.predicate;\n    keyFn = (d: T, index: number, array: Iterable<T>) =>\n      predicate(d, index, array) ? originalKeyFn(d, index, array) : 0;\n  }\n\n  return (items: T[]) => fsum(items, keyFn);\n}\n", "import { O } from 'ts-toolbelt';\nimport { TidyFn } from './types';\n\ntype RenameSpec<T> = Partial<\n  {\n    [K in keyof T]: string;\n  }\n>;\n\n// helper types\ntype OutputT<T extends object, Spec extends RenameSpec<T>> = O.Merge<\n  Omit<T, keyof Spec>,\n  {\n    [NewKey in Exclude<Spec[keyof Spec], undefined>]: T[O.SelectKeys<\n      Spec,\n      NewKey\n    >];\n  }\n>;\n\n/**\n * Renames properties/columns in collection\n *\n * @param renameSpec Mapping of current name to new name { currKey: newKey }\n */\nexport function rename<T extends object, Spec extends RenameSpec<T>>(\n  renameSpec: Spec\n): TidyFn<T, OutputT<T, Spec>> {\n  type Output = OutputT<T, Spec>;\n  const _rename: TidyFn<T, Output> = (items: T[]): Output[] => {\n    return items.map((d) => {\n      const mapped = {} as any;\n      const keys = Object.keys(d) as (keyof T)[];\n      for (const key of keys) {\n        const newKey: keyof Output =\n          ((renameSpec[key] as unknown) as keyof Output) ?? key;\n        mapped[newKey] = d[key];\n      }\n\n      return mapped as Output;\n    });\n  };\n\n  return _rename;\n}\n", "import { O } from 'ts-toolbelt';\nimport { TidyFn, Datum } from './types';\n\ntype ByMap<JoinT extends Datum, T extends Datum> = Partial<\n  Record<keyof JoinT, keyof T>\n>;\n\nexport type JoinOptions<JoinT extends Datum, T extends Datum> = {\n  by?: keyof T | (keyof T)[] | ByMap<JoinT, T>;\n};\n\n/**\n * Compares first two sets of items to find overlapping keys\n * Naively looks at first element... could cause problems if first\n * elements don't have all keys, but scanning each entire set seems\n * unnecessarily slow for most cases.\n */\nexport function autodetectByMap<A, B>(itemsA: A[], itemsB: B[]) {\n  if (itemsA.length === 0 || itemsB.length === 0) return {};\n\n  // intersection of shared keys\n  const keysA = Object.keys(itemsA[0]);\n  const keysB = Object.keys(itemsB[0]);\n\n  // naive linear intersection, but we don't expect objects to have tons of keys\n  // so it's probably fine.\n  const byMap: any = {};\n  for (const key of keysA) {\n    if (keysB.includes(key)) {\n      byMap[key] = key;\n    }\n  }\n\n  return byMap;\n}\n\n// convert by option in to a map from JoinT to T key\nexport function makeByMap<T extends Datum, JoinT extends Datum>(\n  by: JoinOptions<JoinT, T>['by']\n): ByMap<JoinT, T> {\n  // convert by option in to a map from JoinT to T key\n  if (Array.isArray(by)) {\n    const byMap: ByMap<JoinT, T> = {};\n    for (const key of by) {\n      byMap[key as any] = key;\n    }\n    return byMap;\n  } else if (typeof by === 'object') {\n    return by;\n  }\n  return { [by as keyof JoinT]: by as keyof T } as ByMap<JoinT, T>;\n}\n\nexport function isMatch<T extends object, JoinT extends object>(\n  d: T,\n  j: JoinT,\n  byMap: ByMap<JoinT, T>\n) {\n  for (const jKey in byMap) {\n    const dKey = byMap[jKey];\n    if ((d[dKey as keyof T] as any) !== j[jKey as keyof JoinT]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Performs an inner join on two collections\n * @param itemsToJoin The rows/items to be appended to end of collection\n */\nexport function innerJoin<T extends object, JoinT extends object>(\n  itemsToJoin: JoinT[],\n  options?: JoinOptions<JoinT, T> | null | undefined\n): TidyFn<T, O.Merge<T, JoinT>> {\n  const _innerJoin: TidyFn<T, O.Merge<T, JoinT>> = (\n    items: T[]\n  ): O.Merge<T, JoinT>[] => {\n    // convert by option in to a map from JoinT to T key\n    const byMap =\n      options?.by == null\n        ? autodetectByMap(items, itemsToJoin)\n        : makeByMap(options.by);\n\n    const joined = items.flatMap((d: T) => {\n      const matches = itemsToJoin.filter((j: JoinT) => isMatch(d, j, byMap));\n      return matches.map((j: JoinT) => ({ ...d, ...j }));\n    });\n\n    return joined as O.Merge<T, JoinT>[];\n  };\n  return _innerJoin;\n}\n", "import { Datum, TidyFn } from './types';\nimport { isMatch, makeByMap, autodetectByMap, JoinOptions } from './innerJoin';\nimport { O } from 'ts-toolbelt';\n\n/**\n * Performs a left join on two collections\n * @param itemsToJoin The rows/items to be appended to end of collection\n */\nexport function leftJoin<T extends Datum, JoinT extends Datum>(\n  itemsToJoin: JoinT[],\n  options?: JoinOptions<JoinT, T> | null | undefined\n): TidyFn<T, O.Merge<T, Partial<JoinT>>> {\n  const _leftJoin: TidyFn<T, O.Merge<T, Partial<JoinT>>> = (\n    items: T[]\n  ): O.Merge<T, Partial<JoinT>>[] => {\n    if (!itemsToJoin.length) return items as any;\n\n    // convert by option in to a map from T key to JoinT key\n    const byMap =\n      options?.by == null\n        ? autodetectByMap(items, itemsToJoin)\n        : makeByMap(options.by);\n\n    // when we miss a join, we want to explicitly add in undefined\n    // so our rows all have the same keys. get those keys here.\n    const joinObjectKeys = Object.keys(itemsToJoin[0]);\n\n    const joined = items.flatMap((d: T) => {\n      const matches = itemsToJoin.filter((j: JoinT) => isMatch(d, j, byMap));\n      if (matches.length) {\n        return matches.map((j: JoinT) => ({ ...d, ...j }));\n      }\n\n      // add in missing keys explicitly as undefined without\n      // overriding existing values and while maintaining order\n      // of keys\n      const undefinedFill = Object.fromEntries(\n        joinObjectKeys\n          .filter((key) => d[key] == null)\n          .map((key) => [key, undefined])\n      );\n\n      return { ...d, ...undefinedFill };\n    });\n\n    return joined;\n  };\n  return _leftJoin;\n}\n", "import { TidyFn, NonFunctionValue, Key } from './types';\nimport { A } from 'ts-toolbelt';\n\ntype MutateSpecValue<T, O = any> = ((items: T[]) => O[] | O) | NonFunctionValue;\nexport type MutateSummarySpec<T> = Record<Key, MutateSpecValue<T>>;\nexport type ResolvedObj<Obj extends Record<Key, MutateSpecValue<any>>> = {\n  [K in keyof Obj]: Obj[K] extends (...args: any) => any\n    ? ReturnType<Obj[K]> extends any[]\n      ? ReturnType<Obj[K]>[number]\n      : ReturnType<Obj[K]> extends Float64Array\n      ? number\n      : ReturnType<Obj[K]>\n    : Obj[K];\n};\n\ntype Mutated<T, MSpec extends MutateSummarySpec<T>> = T & ResolvedObj<MSpec>;\n\ntype Compute<T> = A.Compute<T>;\n\n/**\n * Mutates items, looking at multiple items at a time to enable summarization.\n * For simpler, item by item mutations, use mutate.\n * @param mutateSpec\n */\nexport function mutateWithSummary<\n  T extends object,\n  MSpec extends MutateSummarySpec<T>\n>(mutateSpec: MSpec): TidyFn<T, Compute<Mutated<T, MSpec>>> {\n  type MutatedT = Mutated<T, MSpec>;\n  // use Compute for better intellisense (reveals all keys in obj)\n  const _mutate: TidyFn<T, Compute<MutatedT>> = (\n    items: T[]\n  ): Compute<MutatedT>[] => {\n    // create the base items to merge mutated values into\n    const mutatedItems: MutatedT[] = items.map((d) => ({ ...d })) as MutatedT[];\n\n    // create vectors for each mutated value\n    for (const key in mutateSpec) {\n      // convert individual values to a vector of the same value\n      // this allows mutate functions to return single numbers and still work\n      const mutateSpecValue = mutateSpec[key];\n      const mutatedResult =\n        typeof mutateSpecValue === 'function'\n          ? mutateSpecValue(mutatedItems)\n          : mutateSpecValue;\n      const mutatedVector =\n        mutatedResult?.[Symbol.iterator] && typeof mutatedResult !== 'string'\n          ? mutatedResult\n          : items.map(() => mutatedResult);\n\n      // merge the mutated vector into the mutated items\n      let i = -1;\n      for (const mutatedItem of mutatedItems) {\n        mutatedItem[key as keyof MutatedT] = mutatedVector[++i];\n      }\n    }\n\n    return mutatedItems as Compute<MutatedT>[];\n  };\n\n  return _mutate;\n}\n", "import { A, O } from 'ts-toolbelt';\nimport { SingleOrArray } from './helpers/singleOrArray';\nimport { Key, TidyFn } from './types';\n\n// helper types\nexport type KeyMap<T extends object = any> = Partial<\n  {\n    [key in keyof T]: keyof T | Array<T[key]> | ((items: T[]) => T[key][]);\n  }\n>;\n\n/**\n * Expands a set of items to include all combinations of the specified keys.\n */\n// prettier-ignore\nexport function expand<T extends object = any, K extends keyof T = keyof T>(expandKeys: K): TidyFn<T, A.Compute<Pick<T, K>>>;\n// prettier-ignore\nexport function expand<T extends object = any, K extends (keyof T)[] = (keyof T)[]>(expandKeys: K): TidyFn<T, A.Compute<Pick<T, K[number]>>>;\n// prettier-ignore\nexport function expand<T extends object = any, K extends KeyMap<T> = KeyMap<T>>(expandKeys: K): TidyFn<T, O.Pick<T, keyof K>>\n// prettier-ignore\nexport function expand<T extends object>(expandKeys: SingleOrArray<Key> | KeyMap<T>): TidyFn<T> {\n  const _expand: TidyFn<T> = (items: T[]) => {\n    const keyMap = makeKeyMap(expandKeys);\n\n    // for each key, get all distinct values or use the provided values\n    const vectors = [];\n    for (const key in keyMap) {\n      const keyValue = keyMap[key];\n      let values;\n      if (typeof keyValue === 'function') {\n        values = keyValue(items);\n      } else if (Array.isArray(keyValue)) {\n        values = keyValue;\n      } else {\n        // read distinct values from the key in the data\n        values = Array.from(new Set(items.map((d) => d[key as keyof T])));\n      }\n\n      vectors.push(values.map((value: any) => ({ [key]: value })));\n    }\n\n    // make all combinations of all value sets\n    return makeCombinations(vectors);\n  };\n\n  return _expand;\n}\n\n/*\n  Recursively compute key combinations\n*/\nfunction makeCombinations(vectors: any[][]): any[] {\n  function combine(accum: any[], baseObj: any, remainingVectors: any[][]) {\n    if (!remainingVectors.length && baseObj != null) {\n      accum.push(baseObj);\n      return;\n    }\n\n    const vector = remainingVectors[0];\n    const newRemainingArrays = remainingVectors.slice(1);\n    for (const item of vector) {\n      combine(accum, { ...baseObj, ...item }, newRemainingArrays);\n    }\n  }\n\n  const result: any[] = [];\n  combine(result, null, vectors);\n  return result;\n}\n\n// convert by option in to a map from T key to JoinT key\nexport function makeKeyMap(keys: SingleOrArray<Key> | KeyMap): KeyMap {\n  if (Array.isArray(keys)) {\n    const keyMap: KeyMap = {};\n    for (const key of keys) {\n      keyMap[key as any] = key;\n    }\n    return keyMap;\n  } else if (typeof keys === 'object') {\n    return keys;\n  }\n\n  return { [keys]: keys as any } as KeyMap;\n}\n", "import { O } from 'ts-toolbelt';\nimport { TidyFn } from './types';\n\ntype Spec<T extends object> = {\n  [K in keyof T]: T[K];\n};\n\ntype Output<T extends object, ReplaceSpec extends Partial<Spec<T>>> = O.Merge<\n  Omit<T, keyof ReplaceSpec>,\n  {\n    [K in keyof ReplaceSpec]: K extends keyof T\n      ? Exclude<T[K], null | undefined> | ReplaceSpec[K]\n      : ReplaceSpec[K];\n  }\n>;\n\n/**\n * Replaces nully values with what is specified in the spec\n */\nexport function replaceNully<\n  T extends object,\n  ReplaceSpec extends Spec<Partial<T>> = Spec<Partial<T>>\n>(replaceSpec: ReplaceSpec): TidyFn<T, Output<T, ReplaceSpec>> {\n  const _replaceNully: TidyFn<T, Output<T, ReplaceSpec>> = (\n    items: T[]\n  ): Output<T, ReplaceSpec>[] => {\n    const replacedItems: Output<T, ReplaceSpec>[] = [];\n\n    for (const d of items) {\n      const obj = { ...d } as any;\n      for (const key in replaceSpec) {\n        if (obj[(key as unknown) as keyof T] == null) {\n          obj[(key as unknown) as keyof T] = replaceSpec[key] as any;\n        }\n      }\n      replacedItems.push(obj);\n    }\n\n    return replacedItems;\n  };\n\n  return _replaceNully;\n}\n", "import { expand, KeyMap } from './expand';\nimport { leftJoin } from './leftJoin';\nimport { Key, TidyFn } from './types';\nimport { replaceNully } from './replaceNully';\nimport { SingleOrArray } from './helpers/singleOrArray';\n\n/**\n * Complete a collection with missing combinations of data\n * @param expandKeys The keys to expand to all combinations of\n * @param replaceNullySpec a map from key name to value of how to deal with undefined values\n */\nexport function complete<T extends object>(\n  expandKeys: SingleOrArray<Key> | KeyMap<T>,\n  replaceNullySpec?: Partial<T> | null | undefined\n): TidyFn<T> {\n  const _complete: TidyFn<T> = (items: T[]): T[] => {\n    const expanded = expand<T, any>(expandKeys)(items);\n    const joined = leftJoin(items)(expanded) as T[]; // actually may have some undefineds...\n    return replaceNullySpec\n      ? (replaceNully(replaceNullySpec)(joined) as T[])\n      : joined;\n  };\n\n  return _complete;\n}\n", "/** Tidy math helpers */\n\n/** Compute a fraction while handling common edge cases */\nexport function rate(\n  numerator: number | null | undefined,\n  denominator: number | null | undefined,\n  allowDivideByZero?: boolean\n): number | undefined {\n  return numerator == null || denominator == null\n    ? undefined\n    : denominator === 0 && numerator === 0\n    ? 0\n    : !allowDivideByZero && denominator === 0\n    ? undefined\n    : numerator / denominator;\n}\n\nexport function subtract(\n  a: number | null | undefined,\n  b: number | null | undefined,\n  nullyZero?: boolean\n) {\n  return a == null || b == null\n    ? nullyZero\n      ? (a ?? 0) - (b ?? 0)\n      : undefined\n    : a - b;\n}\n\nexport function add(\n  a: number | null | undefined,\n  b: number | null | undefined,\n  nullyZero?: boolean\n) {\n  return a == null || b == null\n    ? nullyZero\n      ? (a ?? 0) + (b ?? 0)\n      : undefined\n    : a + b;\n}\n", "import { rate as mathRate } from '../math/math';\n\ntype RateOptions<T> = {\n  predicate?: (d: T, index: number, array: Iterable<T>) => boolean;\n  allowDivideByZero?: boolean;\n};\n\n/**\n * Returns a function that computes a rate (numerator / denominator), setting the value to\n * 0 if denominator = 0 and numerator = 0.\n */\nexport function rate<T extends object>(\n  numerator: keyof T | ((d: T, index: number, array: Iterable<T>) => number),\n  denominator: keyof T | ((d: T, index: number, array: Iterable<T>) => number),\n  options?: RateOptions<T>\n) {\n  const numeratorFn =\n    typeof numerator === 'function'\n      ? numerator\n      : (d: T) => (d[numerator] as unknown) as number;\n  const denominatorFn =\n    typeof denominator === 'function'\n      ? denominator\n      : (d: T) => (d[denominator] as unknown) as number;\n\n  const { predicate, allowDivideByZero } = options ?? {};\n  return predicate == null\n    ? (d: T, index: number, array: Iterable<T>) => {\n        const denom = denominatorFn(d, index, array);\n        const numer = numeratorFn(d, index, array);\n        return mathRate(numer, denom, allowDivideByZero);\n      }\n    : (d: T, index: number, array: Iterable<T>) => {\n        if (!predicate(d, index, array)) return undefined;\n\n        const denom = denominatorFn(d, index, array);\n        const numer = numeratorFn(d, index, array);\n        return mathRate(numer, denom, allowDivideByZero);\n      };\n}\n", "import { fsum, Adder } from 'd3-array';\n\n// See also https://observablehq.com/@fil/fcumsum\nexport function fcumsum<T>(\n  items: T[],\n  accessor: (element: T, i: number, array: Iterable<T>) => any\n): Float64Array {\n  let sum = new Adder(),\n    i = 0;\n\n  return Float64Array.from(\n    items,\n    // we do not actually need to coerce the Adder to number,\n    // as @Fil demonstrated here: https://github.com/pbeshai/tidy/pull/5\n    // so we can just tell typescript to be quiet.\n    (value: T): number =>\n      (sum.add(+(accessor(value, i++, items) || 0)) as unknown) as number\n  );\n}\n\nexport function mean<T>(\n  items: T[],\n  accessor: (element: T, i: number, array: Iterable<T>) => any\n): number | undefined {\n  let n = 0;\n  for (let i = 0; i < items.length; ++i) {\n    const value = accessor(items[i], i, items);\n    // count it if we have a valid number\n    if (+value === value) {\n      n += 1;\n    }\n  }\n\n  return n ? fsum(items, accessor) / n : undefined;\n}\n", "import { min as d3min } from 'd3-array';\n\n/**\n * Returns a function that computes the min over an array of items\n * @param key A string key of the object or an accessor converting the object to a number\n */\nexport function min<T extends object>(\n  key: keyof T | ((d: T, index: number, array: Iterable<T>) => number)\n) {\n  const keyFn =\n    typeof key === 'function' ? key : (d: T) => (d[key] as unknown) as number;\n\n  return (items: T[]) => d3min(items, keyFn);\n}\n", "import { max as d3max } from 'd3-array';\n\n/**\n * Returns a function that computes the max over an array of items\n * @param key A string key of the object or an accessor converting the object to a number\n */\nexport function max<T extends object>(\n  key: keyof T | ((d: T, index: number, array: Iterable<T>) => number)\n) {\n  const keyFn =\n    typeof key === 'function' ? key : (d: T) => (d[key] as unknown) as number;\n\n  return (items: T[]) => d3max(items, keyFn);\n}\n", "import { mean as meanInternal } from '../helpers/summation';\n\n/**\n * Returns a function that computes the mean over an array of items\n * @param key A string key of the object or an accessor converting the object to a number\n */\nexport function mean<T extends object>(\n  key: keyof T | ((d: T, index: number, array: Iterable<T>) => number)\n) {\n  const keyFn =\n    typeof key === 'function' ? key : (d: T) => (d[key] as unknown) as number;\n\n  return (items: T[]) => meanInternal(items, keyFn);\n}\n", "import { median as d3median } from 'd3-array';\n\n/**\n * Returns a function that computes the median over an array of items\n * @param key A string key of the object or an accessor converting the object to a number\n */\nexport function median<T extends object>(\n  key: keyof T | ((d: T, index: number, array: Iterable<T>) => number)\n) {\n  const keyFn =\n    typeof key === 'function' ? key : (d: T) => (d[key] as unknown) as number;\n\n  return (items: T[]) => d3median(items, keyFn);\n}\n", "/**\n * Returns a function that computes the distinct count for a key\n * over an array of items. By default it counts nulls but not undefined\n */\nexport function nDistinct<T extends object>(\n  key: keyof T | ((d: T, index: number, array: Iterable<T>) => any),\n  options: { includeNull?: boolean; includeUndefined?: boolean } = {}\n) {\n  const keyFn = typeof key === 'function' ? key : (d: T) => d[key];\n\n  return (items: T[]) => {\n    const uniques = new Map();\n    let count = 0;\n\n    let i = 0;\n    for (const item of items) {\n      const value = keyFn(item, i++, items);\n\n      if (!uniques.has(value)) {\n        // default includes null but not undefined\n        if (\n          (!options.includeUndefined && value === undefined) ||\n          (options.includeNull === false && value === null)\n        ) {\n          continue;\n        }\n\n        count += 1;\n        uniques.set(value, true);\n      }\n    }\n\n    return count;\n  };\n}\n", "import { tidy, mutate } from '@tidyjs/tidy';\n\nexport function standardizeDateString(date) {\n\tif (date && typeof date === 'string') {\n\t\t// Parses an individual string into a JS date object\n\n\t\tlet dateSplit = date.split(' ');\n\n\t\t// If date doesn't contain timestamp, add one at midnight (avoids timezone interpretation issue)\n\t\tif (!date.includes(':')) {\n\t\t\tdate = date + 'T00:00:00';\n\t\t}\n\n\t\t// Remove any character groups beyond 2 (date and time):\n\t\tif (dateSplit.length > 2) {\n\t\t\tdate = dateSplit[0] + ' ' + dateSplit[1];\n\t\t}\n\n\t\t// Replace microseconds if needed:\n\t\tconst re = /\\.([^\\s]+)/;\n\t\tdate = date.replace(re, '');\n\n\t\t// Remove \"Z\" to avoid timezone interpretation issue:\n\t\tdate = date.replace('Z', '');\n\n\t\t// Replace spaces with \"T\" to conform to ECMA standard:\n\t\tdate = date.replace(' ', 'T');\n\t}\n\n\treturn date;\n}\n\nexport function convertColumnToDate(data, column) {\n\t// Replaces a date column's string values with JS date objects, using the standardizeDateString function\n\n\tdata = tidy(\n\t\tdata,\n\t\tmutate({ [column]: (d) => (d[column] ? new Date(standardizeDateString(d[column])) : null) })\n\t);\n\n\treturn data;\n}\n\nexport function standardizeDateColumn(data, column) {\n\t// Replaces a date column's string values with standardized date strings, using the standardizeDateString function\n\t// Used in Chart.svelte, where using Date objects leads to errors\n\n\tdata = tidy(data, mutate({ [column]: (d) => standardizeDateString(d[column]) }));\n\n\treturn data;\n}\n", "// To-do, replace with import from db-commons\n\nexport var EvidenceType;\n(function (EvidenceType) {\n\tEvidenceType['BOOLEAN'] = 'boolean';\n\tEvidenceType['NUMBER'] = 'number';\n\tEvidenceType['STRING'] = 'string';\n\tEvidenceType['DATE'] = 'date';\n})(EvidenceType || (EvidenceType = {}));\n\nexport var TypeFidelity;\n(function (TypeFidelity) {\n\tTypeFidelity['INFERRED'] = 'inferred';\n\tTypeFidelity['PRECISE'] = 'precise';\n})(TypeFidelity || (TypeFidelity = {}));\n\nexport const inferValueType = function (columnValue) {\n\tif (typeof columnValue === 'number') {\n\t\treturn EvidenceType.NUMBER;\n\t} else if (typeof columnValue === 'boolean') {\n\t\treturn EvidenceType.BOOLEAN;\n\t} else if (columnValue instanceof Date) {\n\t\treturn EvidenceType.DATE;\n\t} else {\n\t\treturn EvidenceType.STRING;\n\t}\n};\n\nexport default function inferColumnTypes(rows) {\n\tif (rows?._evidenceColumnTypes) {\n\t\treturn rows._evidenceColumnTypes;\n\t}\n\tif (rows && rows.length > 0) {\n\t\tlet columns = Object.keys(rows[0]);\n\t\tlet columnTypes = columns?.map((column) => {\n\t\t\tlet firstRowWithColumnValue = rows.find((element) =>\n\t\t\t\telement[column] == null ? false : true\n\t\t\t);\n\t\t\tif (firstRowWithColumnValue) {\n\t\t\t\tlet inferredType = inferValueType(firstRowWithColumnValue[column]);\n\t\t\t\treturn { name: column, evidenceType: inferredType, typeFidelity: TypeFidelity.INFERRED };\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tname: column,\n\t\t\t\t\tevidenceType: EvidenceType.STRING,\n\t\t\t\t\ttypeFidelity: TypeFidelity.INFERRED\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\t\treturn columnTypes;\n\t}\n\treturn [];\n}\n"],
  "mappings": "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",
  "names": ["make_ssf", "SSF", "fill", "fmt", "x", "write_num", "import_ssf", "median", "ssf", "import_ssf", "ssf", "index", "n", "index", "key", "map", "reduce", "values", "groups", "keyof", "index", "group", "max", "index", "min", "index", "array", "n", "n", "array", "index", "array", "matches", "index", "array", "mathRate", "n", "d3min", "d3max", "meanInternal", "d3median", "count", "EvidenceType", "TypeFidelity", "ssf"]
}
