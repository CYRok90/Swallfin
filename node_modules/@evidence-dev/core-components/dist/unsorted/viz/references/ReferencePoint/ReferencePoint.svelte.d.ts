export const evidenceInclude: true;
/** @typedef {typeof __propDef.props}  ReferencePointProps */
/** @typedef {typeof __propDef.events}  ReferencePointEvents */
/** @typedef {typeof __propDef.slots}  ReferencePointSlots */
export default class ReferencePoint extends SvelteComponent<{
    [x: string]: any;
    symbol?: import("../types.js").Symbol | undefined;
    y?: string | number | undefined;
    x?: string | number | undefined;
    color?: string | undefined;
    align?: "center" | "right" | "left" | undefined;
    data?: unknown;
    label?: string | undefined;
    bold?: boolean | undefined;
    emptySet?: "error" | "pass" | "warn" | undefined;
    emptyMessage?: string | undefined;
    italic?: boolean | undefined;
    fontSize?: string | number | undefined;
    symbolSize?: string | number | undefined;
    labelPosition?: any;
    labelColor?: string | undefined;
    labelBackgroundColor?: string | undefined;
    labelBorderColor?: string | undefined;
    labelPadding?: string | number | undefined;
    labelBorderWidth?: string | number | undefined;
    labelBorderRadius?: string | number | undefined;
    labelBorderType?: "solid" | "dotted" | "dashed" | undefined;
    preserveWhitespace?: boolean | undefined;
    symbolColor?: string | undefined;
    symbolBorderWidth?: string | number | undefined;
    symbolBorderColor?: string | undefined;
    labelWidth?: string | number | undefined;
    symbolOpacity?: string | number | undefined;
}, {
    [evt: string]: CustomEvent<any>;
}, {
    default: {};
}> {
}
export type ReferencePointProps = typeof __propDef.props;
export type ReferencePointEvents = typeof __propDef.events;
export type ReferencePointSlots = typeof __propDef.slots;
import { SvelteComponent } from "svelte";
declare const __propDef: {
    props: {
        [x: string]: any;
        symbol?: import("../types.js").Symbol | undefined;
        y?: number | string | undefined;
        x?: number | string | undefined;
        color?: string | undefined;
        align?: 'left' | 'center' | 'right' | undefined;
        data?: unknown;
        label?: string | undefined;
        bold?: boolean | undefined;
        emptySet?: 'pass' | 'warn' | 'error' | undefined;
        emptyMessage?: string | undefined;
        italic?: boolean | undefined;
        fontSize?: number | string | undefined;
        symbolSize?: string | number | undefined;
        labelPosition?: any;
        labelColor?: string | undefined;
        labelBackgroundColor?: string | undefined;
        labelBorderColor?: string | undefined;
        labelPadding?: number | string | undefined;
        labelBorderWidth?: number | string | undefined;
        labelBorderRadius?: number | string | undefined;
        labelBorderType?: 'solid' | 'dotted' | 'dashed' | undefined;
        preserveWhitespace?: boolean | undefined;
        symbolColor?: string | undefined;
        symbolBorderWidth?: number | string | undefined;
        symbolBorderColor?: string | undefined;
        labelWidth?: number | "fit" | string | undefined;
        symbolOpacity?: number | string | undefined;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    }; /** @type {boolean | undefined} */
    exports?: undefined;
    bindings?: undefined;
};
export {};
